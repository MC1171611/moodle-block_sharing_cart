{"version":3,"file":"sortablejs.min.js","sources":["../../src/lib/sortablejs.js"],"sourcesContent":["/* eslint-disable */\n/**!\n * Sortable 1.15.0\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n * @link https://github.com/SortableJS/Sortable/blob/master/modular/sortable.complete.esm.js\n */\n\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n\n        if (enumerableOnly) {\n            symbols = symbols.filter(function (sym) {\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n            });\n        }\n\n        keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n}\n\nfunction _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i] != null ? arguments[i] : {};\n\n        if (i % 2) {\n            ownKeys(Object(source), true).forEach(function (key) {\n                _defineProperty(target, key, source[key]);\n            });\n        } else if (Object.getOwnPropertyDescriptors) {\n            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n        } else {\n            ownKeys(Object(source)).forEach(function (key) {\n                Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n            });\n        }\n    }\n\n    return target;\n}\n\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n        _typeof = function (obj) {\n            return typeof obj;\n        };\n    } else {\n        _typeof = function (obj) {\n            return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n        };\n    }\n\n    return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n\n    return obj;\n}\n\nfunction _extends() {\n    _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            for (var key in source) {\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n\n        return target;\n    };\n\n    return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n\n    return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n\n    var key, i;\n\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n        for (i = 0; i < sourceSymbolKeys.length; i++) {\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n\n    return target;\n}\n\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\n\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar version = \"1.15.0\";\n\nfunction userAgent(pattern) {\n    if (typeof window !== 'undefined' && window.navigator) {\n        return !! /*@__PURE__*/navigator.userAgent.match(pattern);\n    }\n}\n\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\nvar Edge = userAgent(/Edge/i);\nvar FireFox = userAgent(/firefox/i);\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS = userAgent(/iP(ad|od|hone)/i);\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n\nvar captureMode = {\n    capture: false,\n    passive: false\n};\n\nfunction on(el, event, fn) {\n    el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction off(el, event, fn) {\n    el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction matches(\n    /**HTMLElement*/\n    el,\n    /**String*/\n    selector) {\n    if (!selector) return;\n    selector[0] === '>' && (selector = selector.substring(1));\n\n    if (el) {\n        try {\n            if (el.matches) {\n                return el.matches(selector);\n            } else if (el.msMatchesSelector) {\n                return el.msMatchesSelector(selector);\n            } else if (el.webkitMatchesSelector) {\n                return el.webkitMatchesSelector(selector);\n            }\n        } catch (_) {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getParentOrHost(el) {\n    return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\n\nfunction closest(\n    /**HTMLElement*/\n    el,\n    /**String*/\n    selector,\n    /**HTMLElement*/\n    ctx, includeCTX) {\n    if (el) {\n        ctx = ctx || document;\n\n        do {\n            if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n                return el;\n            }\n\n            if (el === ctx) break;\n            /* jshint boss:true */\n        } while (el = getParentOrHost(el));\n    }\n\n    return null;\n}\n\nvar R_SPACE = /\\s+/g;\n\nfunction toggleClass(el, name, state) {\n    if (el && name) {\n        if (el.classList) {\n            el.classList[state ? 'add' : 'remove'](name);\n        } else {\n            var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n            el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n        }\n    }\n}\n\nfunction css(el, prop, val) {\n    var style = el && el.style;\n\n    if (style) {\n        if (val === void 0) {\n            if (document.defaultView && document.defaultView.getComputedStyle) {\n                val = document.defaultView.getComputedStyle(el, '');\n            } else if (el.currentStyle) {\n                val = el.currentStyle;\n            }\n\n            return prop === void 0 ? val : val[prop];\n        } else {\n            if (!(prop in style) && prop.indexOf('webkit') === -1) {\n                prop = '-webkit-' + prop;\n            }\n\n            style[prop] = val + (typeof val === 'string' ? '' : 'px');\n        }\n    }\n}\n\nfunction matrix(el, selfOnly) {\n    var appliedTransforms = '';\n\n    if (typeof el === 'string') {\n        appliedTransforms = el;\n    } else {\n        do {\n            var transform = css(el, 'transform');\n\n            if (transform && transform !== 'none') {\n                appliedTransforms = transform + ' ' + appliedTransforms;\n            }\n            /* jshint boss:true */\n\n        } while (!selfOnly && (el = el.parentNode));\n    }\n\n    var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n    /*jshint -W056 */\n\n    return matrixFn && new matrixFn(appliedTransforms);\n}\n\nfunction find(ctx, tagName, iterator) {\n    if (ctx) {\n        var list = ctx.getElementsByTagName(tagName),\n            i = 0,\n            n = list.length;\n\n        if (iterator) {\n            for (; i < n; i++) {\n                iterator(list[i], i);\n            }\n        }\n\n        return list;\n    }\n\n    return [];\n}\n\nfunction getWindowScrollingElement() {\n    var scrollingElement = document.scrollingElement;\n\n    if (scrollingElement) {\n        return scrollingElement;\n    } else {\n        return document.documentElement;\n    }\n}\n/**\n * Returns the \"bounding client rect\" of given element\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\n * @param  {[HTMLElement]} container              The parent the element will be placed in\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\n */\n\n\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n    if (!el.getBoundingClientRect && el !== window) return;\n    var elRect, top, left, bottom, right, height, width;\n\n    if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {\n        elRect = el.getBoundingClientRect();\n        top = elRect.top;\n        left = elRect.left;\n        bottom = elRect.bottom;\n        right = elRect.right;\n        height = elRect.height;\n        width = elRect.width;\n    } else {\n        top = 0;\n        left = 0;\n        bottom = window.innerHeight;\n        right = window.innerWidth;\n        height = window.innerHeight;\n        width = window.innerWidth;\n    }\n\n    if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n        // Adjust for translate()\n        container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n        // Not needed on <= IE11\n\n        if (!IE11OrLess) {\n            do {\n                if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n                    var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container\n\n                    top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n                    left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n                    bottom = top + elRect.height;\n                    right = left + elRect.width;\n                    break;\n                }\n                /* jshint boss:true */\n\n            } while (container = container.parentNode);\n        }\n    }\n\n    if (undoScale && el !== window) {\n        // Adjust for scale()\n        var elMatrix = matrix(container || el),\n            scaleX = elMatrix && elMatrix.a,\n            scaleY = elMatrix && elMatrix.d;\n\n        if (elMatrix) {\n            top /= scaleY;\n            left /= scaleX;\n            width /= scaleX;\n            height /= scaleY;\n            bottom = top + height;\n            right = left + width;\n        }\n    }\n\n    return {\n        top: top,\n        left: left,\n        bottom: bottom,\n        right: right,\n        width: width,\n        height: height\n    };\n}\n/**\n * Checks if a side of an element is scrolled past a side of its parents\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\n */\n\n\nfunction isScrolledPast(el, elSide, parentSide) {\n    var parent = getParentAutoScrollElement(el, true),\n        elSideVal = getRect(el)[elSide];\n    /* jshint boss:true */\n\n    while (parent) {\n        var parentSideVal = getRect(parent)[parentSide],\n            visible = void 0;\n\n        if (parentSide === 'top' || parentSide === 'left') {\n            visible = elSideVal >= parentSideVal;\n        } else {\n            visible = elSideVal <= parentSideVal;\n        }\n\n        if (!visible) return parent;\n        if (parent === getWindowScrollingElement()) break;\n        parent = getParentAutoScrollElement(parent, false);\n    }\n\n    return false;\n}\n/**\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\n * and non-draggable elements\n * @param  {HTMLElement} el       The parent element\n * @param  {Number} childNum      The index of the child\n * @param  {Object} options       Parent Sortable's options\n * @return {HTMLElement}          The child at index childNum, or null if not found\n */\n\n\nfunction getChild(el, childNum, options, includeDragEl) {\n    var currentChild = 0,\n        i = 0,\n        children = el.children;\n\n    while (i < children.length) {\n        if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && (includeDragEl || children[i] !== Sortable.dragged) && closest(children[i], options.draggable, el, false)) {\n            if (currentChild === childNum) {\n                return children[i];\n            }\n\n            currentChild++;\n        }\n\n        i++;\n    }\n\n    return null;\n}\n/**\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\n * @param  {HTMLElement} el       Parent element\n * @param  {selector} selector    Any other elements that should be ignored\n * @return {HTMLElement}          The last child, ignoring ghostEl\n */\n\n\nfunction lastChild(el, selector) {\n    var last = el.lastElementChild;\n\n    while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n        last = last.previousElementSibling;\n    }\n\n    return last || null;\n}\n/**\n * Returns the index of an element within its parent for a selected set of\n * elements\n * @param  {HTMLElement} el\n * @param  {selector} selector\n * @return {number}\n */\n\n\nfunction index(el, selector) {\n    var index = 0;\n\n    if (!el || !el.parentNode) {\n        return -1;\n    }\n    /* jshint boss:true */\n\n\n    while (el = el.previousElementSibling) {\n        if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n            index++;\n        }\n    }\n\n    return index;\n}\n/**\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\n * The value is returned in real pixels.\n * @param  {HTMLElement} el\n * @return {Array}             Offsets in the format of [left, top]\n */\n\n\nfunction getRelativeScrollOffset(el) {\n    var offsetLeft = 0,\n        offsetTop = 0,\n        winScroller = getWindowScrollingElement();\n\n    if (el) {\n        do {\n            var elMatrix = matrix(el),\n                scaleX = elMatrix.a,\n                scaleY = elMatrix.d;\n            offsetLeft += el.scrollLeft * scaleX;\n            offsetTop += el.scrollTop * scaleY;\n        } while (el !== winScroller && (el = el.parentNode));\n    }\n\n    return [offsetLeft, offsetTop];\n}\n/**\n * Returns the index of the object within the given array\n * @param  {Array} arr   Array that may or may not hold the object\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\n * @return {Number}      The index of the object in the array, or -1\n */\n\n\nfunction indexOfObject(arr, obj) {\n    for (var i in arr) {\n        if (!arr.hasOwnProperty(i)) continue;\n\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n        }\n    }\n\n    return -1;\n}\n\nfunction getParentAutoScrollElement(el, includeSelf) {\n    // skip to window\n    if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n    var elem = el;\n    var gotSelf = false;\n\n    do {\n        // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n        if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n            var elemCSS = css(elem);\n\n            if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n                if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n                if (gotSelf || includeSelf) return elem;\n                gotSelf = true;\n            }\n        }\n        /* jshint boss:true */\n\n    } while (elem = elem.parentNode);\n\n    return getWindowScrollingElement();\n}\n\nfunction extend(dst, src) {\n    if (dst && src) {\n        for (var key in src) {\n            if (src.hasOwnProperty(key)) {\n                dst[key] = src[key];\n            }\n        }\n    }\n\n    return dst;\n}\n\nfunction isRectEqual(rect1, rect2) {\n    return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\n\nvar _throttleTimeout;\n\nfunction throttle(callback, ms) {\n    return function () {\n        if (!_throttleTimeout) {\n            var args = arguments,\n                _this = this;\n\n            if (args.length === 1) {\n                callback.call(_this, args[0]);\n            } else {\n                callback.apply(_this, args);\n            }\n\n            _throttleTimeout = setTimeout(function () {\n                _throttleTimeout = void 0;\n            }, ms);\n        }\n    };\n}\n\nfunction cancelThrottle() {\n    clearTimeout(_throttleTimeout);\n    _throttleTimeout = void 0;\n}\n\nfunction scrollBy(el, x, y) {\n    el.scrollLeft += x;\n    el.scrollTop += y;\n}\n\nfunction clone(el) {\n    var Polymer = window.Polymer;\n    var $ = window.jQuery || window.Zepto;\n\n    if (Polymer && Polymer.dom) {\n        return Polymer.dom(el).cloneNode(true);\n    } else if ($) {\n        return $(el).clone(true)[0];\n    } else {\n        return el.cloneNode(true);\n    }\n}\n\nfunction setRect(el, rect) {\n    css(el, 'position', 'absolute');\n    css(el, 'top', rect.top);\n    css(el, 'left', rect.left);\n    css(el, 'width', rect.width);\n    css(el, 'height', rect.height);\n}\n\nfunction unsetRect(el) {\n    css(el, 'position', '');\n    css(el, 'top', '');\n    css(el, 'left', '');\n    css(el, 'width', '');\n    css(el, 'height', '');\n}\n\nvar expando = 'Sortable' + new Date().getTime();\n\nfunction AnimationStateManager() {\n    var animationStates = [],\n        animationCallbackId;\n    return {\n        captureAnimationState: function captureAnimationState() {\n            animationStates = [];\n            if (!this.options.animation) return;\n            var children = [].slice.call(this.el.children);\n            children.forEach(function (child) {\n                if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n                animationStates.push({\n                    target: child,\n                    rect: getRect(child)\n                });\n\n                var fromRect = _objectSpread2({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation\n\n\n                if (child.thisAnimationDuration) {\n                    var childMatrix = matrix(child, true);\n\n                    if (childMatrix) {\n                        fromRect.top -= childMatrix.f;\n                        fromRect.left -= childMatrix.e;\n                    }\n                }\n\n                child.fromRect = fromRect;\n            });\n        },\n        addAnimationState: function addAnimationState(state) {\n            animationStates.push(state);\n        },\n        removeAnimationState: function removeAnimationState(target) {\n            animationStates.splice(indexOfObject(animationStates, {\n                target: target\n            }), 1);\n        },\n        animateAll: function animateAll(callback) {\n            var _this = this;\n\n            if (!this.options.animation) {\n                clearTimeout(animationCallbackId);\n                if (typeof callback === 'function') callback();\n                return;\n            }\n\n            var animating = false,\n                animationTime = 0;\n            animationStates.forEach(function (state) {\n                var time = 0,\n                    target = state.target,\n                    fromRect = target.fromRect,\n                    toRect = getRect(target),\n                    prevFromRect = target.prevFromRect,\n                    prevToRect = target.prevToRect,\n                    animatingRect = state.rect,\n                    targetMatrix = matrix(target, true);\n\n                if (targetMatrix) {\n                    // Compensate for current animation\n                    toRect.top -= targetMatrix.f;\n                    toRect.left -= targetMatrix.e;\n                }\n\n                target.toRect = toRect;\n\n                if (target.thisAnimationDuration) {\n                    // Could also check if animatingRect is between fromRect and toRect\n                    if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect\n                        (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n                        // If returning to same place as started from animation and on same axis\n                        time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n                    }\n                } // if fromRect != toRect: animate\n\n\n                if (!isRectEqual(toRect, fromRect)) {\n                    target.prevFromRect = fromRect;\n                    target.prevToRect = toRect;\n\n                    if (!time) {\n                        time = _this.options.animation;\n                    }\n\n                    _this.animate(target, animatingRect, toRect, time);\n                }\n\n                if (time) {\n                    animating = true;\n                    animationTime = Math.max(animationTime, time);\n                    clearTimeout(target.animationResetTimer);\n                    target.animationResetTimer = setTimeout(function () {\n                        target.animationTime = 0;\n                        target.prevFromRect = null;\n                        target.fromRect = null;\n                        target.prevToRect = null;\n                        target.thisAnimationDuration = null;\n                    }, time);\n                    target.thisAnimationDuration = time;\n                }\n            });\n            clearTimeout(animationCallbackId);\n\n            if (!animating) {\n                if (typeof callback === 'function') callback();\n            } else {\n                animationCallbackId = setTimeout(function () {\n                    if (typeof callback === 'function') callback();\n                }, animationTime);\n            }\n\n            animationStates = [];\n        },\n        animate: function animate(target, currentRect, toRect, duration) {\n            if (duration) {\n                css(target, 'transition', '');\n                css(target, 'transform', '');\n                var elMatrix = matrix(this.el),\n                    scaleX = elMatrix && elMatrix.a,\n                    scaleY = elMatrix && elMatrix.d,\n                    translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n                    translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n                target.animatingX = !!translateX;\n                target.animatingY = !!translateY;\n                css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n                this.forRepaintDummy = repaint(target); // repaint\n\n                css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n                css(target, 'transform', 'translate3d(0,0,0)');\n                typeof target.animated === 'number' && clearTimeout(target.animated);\n                target.animated = setTimeout(function () {\n                    css(target, 'transition', '');\n                    css(target, 'transform', '');\n                    target.animated = false;\n                    target.animatingX = false;\n                    target.animatingY = false;\n                }, duration);\n            }\n        }\n    };\n}\n\nfunction repaint(target) {\n    return target.offsetWidth;\n}\n\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n    return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\n\nvar plugins = [];\nvar defaults = {\n    initializeByDefault: true\n};\nvar PluginManager = {\n    mount: function mount(plugin) {\n        // Set default static properties\n        for (var option in defaults) {\n            if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n                plugin[option] = defaults[option];\n            }\n        }\n\n        plugins.forEach(function (p) {\n            if (p.pluginName === plugin.pluginName) {\n                throw \"Sortable: Cannot mount plugin \".concat(plugin.pluginName, \" more than once\");\n            }\n        });\n        plugins.push(plugin);\n    },\n    pluginEvent: function pluginEvent(eventName, sortable, evt) {\n        var _this = this;\n\n        this.eventCanceled = false;\n\n        evt.cancel = function () {\n            _this.eventCanceled = true;\n        };\n\n        var eventNameGlobal = eventName + 'Global';\n        plugins.forEach(function (plugin) {\n            if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable\n\n            if (sortable[plugin.pluginName][eventNameGlobal]) {\n                sortable[plugin.pluginName][eventNameGlobal](_objectSpread2({\n                    sortable: sortable\n                }, evt));\n            } // Only fire plugin event if plugin is enabled in this sortable,\n            // and plugin has event defined\n\n\n            if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n                sortable[plugin.pluginName][eventName](_objectSpread2({\n                    sortable: sortable\n                }, evt));\n            }\n        });\n    },\n    initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n        plugins.forEach(function (plugin) {\n            var pluginName = plugin.pluginName;\n            if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n            var initialized = new plugin(sortable, el, sortable.options);\n            initialized.sortable = sortable;\n            initialized.options = sortable.options;\n            sortable[pluginName] = initialized; // Add default options from plugin\n\n            _extends(defaults, initialized.defaults);\n        });\n\n        for (var option in sortable.options) {\n            if (!sortable.options.hasOwnProperty(option)) continue;\n            var modified = this.modifyOption(sortable, option, sortable.options[option]);\n\n            if (typeof modified !== 'undefined') {\n                sortable.options[option] = modified;\n            }\n        }\n    },\n    getEventProperties: function getEventProperties(name, sortable) {\n        var eventProperties = {};\n        plugins.forEach(function (plugin) {\n            if (typeof plugin.eventProperties !== 'function') return;\n\n            _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n        });\n        return eventProperties;\n    },\n    modifyOption: function modifyOption(sortable, name, value) {\n        var modifiedValue;\n        plugins.forEach(function (plugin) {\n            // Plugin must exist on the Sortable\n            if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n\n            if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n                modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n            }\n        });\n        return modifiedValue;\n    }\n};\n\nfunction dispatchEvent(_ref) {\n    var sortable = _ref.sortable,\n        rootEl = _ref.rootEl,\n        name = _ref.name,\n        targetEl = _ref.targetEl,\n        cloneEl = _ref.cloneEl,\n        toEl = _ref.toEl,\n        fromEl = _ref.fromEl,\n        oldIndex = _ref.oldIndex,\n        newIndex = _ref.newIndex,\n        oldDraggableIndex = _ref.oldDraggableIndex,\n        newDraggableIndex = _ref.newDraggableIndex,\n        originalEvent = _ref.originalEvent,\n        putSortable = _ref.putSortable,\n        extraEventProperties = _ref.extraEventProperties;\n    sortable = sortable || rootEl && rootEl[expando];\n    if (!sortable) return;\n    var evt,\n        options = sortable.options,\n        onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature\n\n    if (window.CustomEvent && !IE11OrLess && !Edge) {\n        evt = new CustomEvent(name, {\n            bubbles: true,\n            cancelable: true\n        });\n    } else {\n        evt = document.createEvent('Event');\n        evt.initEvent(name, true, true);\n    }\n\n    evt.to = toEl || rootEl;\n    evt.from = fromEl || rootEl;\n    evt.item = targetEl || rootEl;\n    evt.clone = cloneEl;\n    evt.oldIndex = oldIndex;\n    evt.newIndex = newIndex;\n    evt.oldDraggableIndex = oldDraggableIndex;\n    evt.newDraggableIndex = newDraggableIndex;\n    evt.originalEvent = originalEvent;\n    evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n\n    var allEventProperties = _objectSpread2(_objectSpread2({}, extraEventProperties), PluginManager.getEventProperties(name, sortable));\n\n    for (var option in allEventProperties) {\n        evt[option] = allEventProperties[option];\n    }\n\n    if (rootEl) {\n        rootEl.dispatchEvent(evt);\n    }\n\n    if (options[onName]) {\n        options[onName].call(sortable, evt);\n    }\n}\n\nvar _excluded = [\"evt\"];\n\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        originalEvent = _ref.evt,\n        data = _objectWithoutProperties(_ref, _excluded);\n\n    PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread2({\n        dragEl: dragEl,\n        parentEl: parentEl,\n        ghostEl: ghostEl,\n        rootEl: rootEl,\n        nextEl: nextEl,\n        lastDownEl: lastDownEl,\n        cloneEl: cloneEl,\n        cloneHidden: cloneHidden,\n        dragStarted: moved,\n        putSortable: putSortable,\n        activeSortable: Sortable.active,\n        originalEvent: originalEvent,\n        oldIndex: oldIndex,\n        oldDraggableIndex: oldDraggableIndex,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        hideGhostForTarget: _hideGhostForTarget,\n        unhideGhostForTarget: _unhideGhostForTarget,\n        cloneNowHidden: function cloneNowHidden() {\n            cloneHidden = true;\n        },\n        cloneNowShown: function cloneNowShown() {\n            cloneHidden = false;\n        },\n        dispatchSortableEvent: function dispatchSortableEvent(name) {\n            _dispatchEvent({\n                sortable: sortable,\n                name: name,\n                originalEvent: originalEvent\n            });\n        }\n    }, data));\n};\n\nfunction _dispatchEvent(info) {\n    dispatchEvent(_objectSpread2({\n        putSortable: putSortable,\n        cloneEl: cloneEl,\n        targetEl: dragEl,\n        rootEl: rootEl,\n        oldIndex: oldIndex,\n        oldDraggableIndex: oldDraggableIndex,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex\n    }, info));\n}\n\nvar dragEl,\n    parentEl,\n    ghostEl,\n    rootEl,\n    nextEl,\n    lastDownEl,\n    cloneEl,\n    cloneHidden,\n    oldIndex,\n    newIndex,\n    oldDraggableIndex,\n    newDraggableIndex,\n    activeGroup,\n    putSortable,\n    awaitingDragStarted = false,\n    ignoreNextClick = false,\n    sortables = [],\n    tapEvt,\n    touchEvt,\n    lastDx,\n    lastDy,\n    tapDistanceLeft,\n    tapDistanceTop,\n    moved,\n    lastTarget,\n    lastDirection,\n    pastFirstInvertThresh = false,\n    isCircumstantialInvert = false,\n    targetMoveDistance,\n    // For positioning ghost absolutely\n    ghostRelativeParent,\n    ghostRelativeParentInitialScroll = [],\n    // (left, top)\n    _silent = false,\n    savedInputChecked = [];\n/** @const */\n\nvar documentExists = typeof document !== 'undefined',\n    PositionGhostAbsolutely = IOS,\n    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n    // This will not pass for IE9, because IE9 DnD only works on anchors\n    supportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n    supportCssPointerEvents = function () {\n        if (!documentExists) return; // false when <= IE11\n\n        if (IE11OrLess) {\n            return false;\n        }\n\n        var el = document.createElement('x');\n        el.style.cssText = 'pointer-events:auto';\n        return el.style.pointerEvents === 'auto';\n    }(),\n    _detectDirection = function _detectDirection(el, options) {\n        var elCSS = css(el),\n            elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n            child1 = getChild(el, 0, options),\n            child2 = getChild(el, 1, options),\n            firstChildCSS = child1 && css(child1),\n            secondChildCSS = child2 && css(child2),\n            firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n            secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n\n        if (elCSS.display === 'flex') {\n            return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n        }\n\n        if (elCSS.display === 'grid') {\n            return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n        }\n\n        if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n            var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n            return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n        }\n\n        return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n    },\n    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n        var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n            dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n            dragElOppLength = vertical ? dragRect.width : dragRect.height,\n            targetS1Opp = vertical ? targetRect.left : targetRect.top,\n            targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n            targetOppLength = vertical ? targetRect.width : targetRect.height;\n        return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n    },\n\n    /**\n     * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n     * @param  {Number} x      X position\n     * @param  {Number} y      Y position\n     * @return {HTMLElement}   Element of the first found nearest Sortable\n     */\n    _detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n        var ret;\n        sortables.some(function (sortable) {\n            var threshold = sortable[expando].options.emptyInsertThreshold;\n            if (!threshold || lastChild(sortable)) return;\n            var rect = getRect(sortable),\n                insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n                insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n\n            if (insideHorizontally && insideVertically) {\n                return ret = sortable;\n            }\n        });\n        return ret;\n    },\n    _prepareGroup = function _prepareGroup(options) {\n        function toFn(value, pull) {\n            return function (to, from, dragEl, evt) {\n                var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n\n                if (value == null && (pull || sameGroup)) {\n                    // Default pull value\n                    // Default pull and put value if same group\n                    return true;\n                } else if (value == null || value === false) {\n                    return false;\n                } else if (pull && value === 'clone') {\n                    return value;\n                } else if (typeof value === 'function') {\n                    return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n                } else {\n                    var otherGroup = (pull ? to : from).options.group.name;\n                    return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n                }\n            };\n        }\n\n        var group = {};\n        var originalGroup = options.group;\n\n        if (!originalGroup || _typeof(originalGroup) != 'object') {\n            originalGroup = {\n                name: originalGroup\n            };\n        }\n\n        group.name = originalGroup.name;\n        group.checkPull = toFn(originalGroup.pull, true);\n        group.checkPut = toFn(originalGroup.put);\n        group.revertClone = originalGroup.revertClone;\n        options.group = group;\n    },\n    _hideGhostForTarget = function _hideGhostForTarget() {\n        if (!supportCssPointerEvents && ghostEl) {\n            css(ghostEl, 'display', 'none');\n        }\n    },\n    _unhideGhostForTarget = function _unhideGhostForTarget() {\n        if (!supportCssPointerEvents && ghostEl) {\n            css(ghostEl, 'display', '');\n        }\n    }; // #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\n\nif (documentExists && !ChromeForAndroid) {\n    document.addEventListener('click', function (evt) {\n        if (ignoreNextClick) {\n            evt.preventDefault();\n            evt.stopPropagation && evt.stopPropagation();\n            evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n            ignoreNextClick = false;\n            return false;\n        }\n    }, true);\n}\n\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n    if (dragEl) {\n        evt = evt.touches ? evt.touches[0] : evt;\n\n        var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n        if (nearest) {\n            // Create imitation event\n            var event = {};\n\n            for (var i in evt) {\n                if (evt.hasOwnProperty(i)) {\n                    event[i] = evt[i];\n                }\n            }\n\n            event.target = event.rootEl = nearest;\n            event.preventDefault = void 0;\n            event.stopPropagation = void 0;\n\n            nearest[expando]._onDragOver(event);\n        }\n    }\n};\n\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n    if (dragEl) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n    }\n};\n/**\n * @class  Sortable\n * @param  {HTMLElement}  el\n * @param  {Object}       [options]\n */\n\n\nfunction Sortable(el, options) {\n    if (!(el && el.nodeType && el.nodeType === 1)) {\n        throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n    }\n\n    this.el = el; // root element\n\n    this.options = options = _extends({}, options); // Export instance\n\n    el[expando] = this;\n    var defaults = {\n        group: null,\n        sort: true,\n        disabled: false,\n        store: null,\n        handle: null,\n        draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n        swapThreshold: 1,\n        // percentage; 0 <= x <= 1\n        invertSwap: false,\n        // invert always\n        invertedSwapThreshold: null,\n        // will be set to same as swapThreshold if default\n        removeCloneOnHide: true,\n        direction: function direction() {\n            return _detectDirection(el, this.options);\n        },\n        ghostClass: 'sortable-ghost',\n        chosenClass: 'sortable-chosen',\n        dragClass: 'sortable-drag',\n        ignore: 'a, img',\n        filter: null,\n        preventOnFilter: true,\n        animation: 0,\n        easing: null,\n        setData: function setData(dataTransfer, dragEl) {\n            dataTransfer.setData('Text', dragEl.textContent);\n        },\n        dropBubble: false,\n        dragoverBubble: false,\n        dataIdAttr: 'data-id',\n        delay: 0,\n        delayOnTouchOnly: false,\n        touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n        forceFallback: false,\n        fallbackClass: 'sortable-fallback',\n        fallbackOnBody: false,\n        fallbackTolerance: 0,\n        fallbackOffset: {\n            x: 0,\n            y: 0\n        },\n        supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window && !Safari,\n        emptyInsertThreshold: 5\n    };\n    PluginManager.initializePlugins(this, el, defaults); // Set default options\n\n    for (var name in defaults) {\n        !(name in options) && (options[name] = defaults[name]);\n    }\n\n    _prepareGroup(options); // Bind all private methods\n\n\n    for (var fn in this) {\n        if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n            this[fn] = this[fn].bind(this);\n        }\n    } // Setup drag mode\n\n\n    this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n    if (this.nativeDraggable) {\n        // Touch start threshold cannot be greater than the native dragstart threshold\n        this.options.touchStartThreshold = 1;\n    } // Bind events\n\n\n    if (options.supportPointer) {\n        on(el, 'pointerdown', this._onTapStart);\n    } else {\n        on(el, 'mousedown', this._onTapStart);\n        on(el, 'touchstart', this._onTapStart);\n    }\n\n    if (this.nativeDraggable) {\n        on(el, 'dragover', this);\n        on(el, 'dragenter', this);\n    }\n\n    sortables.push(this.el); // Restore sorting\n\n    options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager\n\n    _extends(this, AnimationStateManager());\n}\n\nSortable.prototype =\n    /** @lends Sortable.prototype */\n    {\n        constructor: Sortable,\n        _isOutsideThisEl: function _isOutsideThisEl(target) {\n            if (!this.el.contains(target) && target !== this.el) {\n                lastTarget = null;\n            }\n        },\n        _getDirection: function _getDirection(evt, target) {\n            return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n        },\n        _onTapStart: function _onTapStart(\n            /** Event|TouchEvent */\n            evt) {\n            if (!evt.cancelable) return;\n\n            var _this = this,\n                el = this.el,\n                options = this.options,\n                preventOnFilter = options.preventOnFilter,\n                type = evt.type,\n                touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n                target = (touch || evt).target,\n                originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n                filter = options.filter;\n\n            _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\n\n            if (dragEl) {\n                return;\n            }\n\n            if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n                return; // only left button and enabled\n            } // cancel dnd if original target is content editable\n\n\n            if (originalTarget.isContentEditable) {\n                return;\n            } // Safari ignores further event handling after mousedown\n\n\n            if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === 'SELECT') {\n                return;\n            }\n\n            target = closest(target, options.draggable, el, false);\n\n            if (target && target.animated) {\n                return;\n            }\n\n            if (lastDownEl === target) {\n                // Ignoring duplicate `down`\n                return;\n            } // Get the index of the dragged element within its parent\n\n\n            oldIndex = index(target);\n            oldDraggableIndex = index(target, options.draggable); // Check filter\n\n            if (typeof filter === 'function') {\n                if (filter.call(this, evt, target, this)) {\n                    _dispatchEvent({\n                        sortable: _this,\n                        rootEl: originalTarget,\n                        name: 'filter',\n                        targetEl: target,\n                        toEl: el,\n                        fromEl: el\n                    });\n\n                    pluginEvent('filter', _this, {\n                        evt: evt\n                    });\n                    preventOnFilter && evt.cancelable && evt.preventDefault();\n                    return; // cancel dnd\n                }\n            } else if (filter) {\n                filter = filter.split(',').some(function (criteria) {\n                    criteria = closest(originalTarget, criteria.trim(), el, false);\n\n                    if (criteria) {\n                        _dispatchEvent({\n                            sortable: _this,\n                            rootEl: criteria,\n                            name: 'filter',\n                            targetEl: target,\n                            fromEl: el,\n                            toEl: el\n                        });\n\n                        pluginEvent('filter', _this, {\n                            evt: evt\n                        });\n                        return true;\n                    }\n                });\n\n                if (filter) {\n                    preventOnFilter && evt.cancelable && evt.preventDefault();\n                    return; // cancel dnd\n                }\n            }\n\n            if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n                return;\n            } // Prepare `dragstart`\n\n\n            this._prepareDragStart(evt, touch, target);\n        },\n        _prepareDragStart: function _prepareDragStart(\n            /** Event */\n            evt,\n            /** Touch */\n            touch,\n            /** HTMLElement */\n            target) {\n            var _this = this,\n                el = _this.el,\n                options = _this.options,\n                ownerDocument = el.ownerDocument,\n                dragStartFn;\n\n            if (target && !dragEl && target.parentNode === el) {\n                var dragRect = getRect(target);\n                rootEl = el;\n                dragEl = target;\n                parentEl = dragEl.parentNode;\n                nextEl = dragEl.nextSibling;\n                lastDownEl = target;\n                activeGroup = options.group;\n                Sortable.dragged = dragEl;\n                tapEvt = {\n                    target: dragEl,\n                    clientX: (touch || evt).clientX,\n                    clientY: (touch || evt).clientY\n                };\n                tapDistanceLeft = tapEvt.clientX - dragRect.left;\n                tapDistanceTop = tapEvt.clientY - dragRect.top;\n                this._lastX = (touch || evt).clientX;\n                this._lastY = (touch || evt).clientY;\n                dragEl.style['will-change'] = 'all';\n\n                dragStartFn = function dragStartFn() {\n                    pluginEvent('delayEnded', _this, {\n                        evt: evt\n                    });\n\n                    if (Sortable.eventCanceled) {\n                        _this._onDrop();\n\n                        return;\n                    } // Delayed drag has been triggered\n                    // we can re-enable the events: touchmove/mousemove\n\n\n                    _this._disableDelayedDragEvents();\n\n                    if (!FireFox && _this.nativeDraggable) {\n                        dragEl.draggable = true;\n                    } // Bind the events: dragstart/dragend\n\n\n                    _this._triggerDragStart(evt, touch); // Drag start event\n\n\n                    _dispatchEvent({\n                        sortable: _this,\n                        name: 'choose',\n                        originalEvent: evt\n                    }); // Chosen item\n\n\n                    toggleClass(dragEl, options.chosenClass, true);\n                }; // Disable \"draggable\"\n\n\n                options.ignore.split(',').forEach(function (criteria) {\n                    find(dragEl, criteria.trim(), _disableDraggable);\n                });\n                on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n                on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n                on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n                on(ownerDocument, 'mouseup', _this._onDrop);\n                on(ownerDocument, 'touchend', _this._onDrop);\n                on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)\n\n                if (FireFox && this.nativeDraggable) {\n                    this.options.touchStartThreshold = 4;\n                    dragEl.draggable = true;\n                }\n\n                pluginEvent('delayStart', this, {\n                    evt: evt\n                }); // Delay is impossible for native DnD in Edge or IE\n\n                if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n                    if (Sortable.eventCanceled) {\n                        this._onDrop();\n\n                        return;\n                    } // If the user moves the pointer or let go the click or touch\n                    // before the delay has been reached:\n                    // disable the delayed drag\n\n\n                    on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n                    on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n                    on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n                    on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n                    on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n                    options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n                    _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n                } else {\n                    dragStartFn();\n                }\n            }\n        },\n        _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(\n            /** TouchEvent|PointerEvent **/\n            e) {\n            var touch = e.touches ? e.touches[0] : e;\n\n            if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n                this._disableDelayedDrag();\n            }\n        },\n        _disableDelayedDrag: function _disableDelayedDrag() {\n            dragEl && _disableDraggable(dragEl);\n            clearTimeout(this._dragStartTimer);\n\n            this._disableDelayedDragEvents();\n        },\n        _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n            var ownerDocument = this.el.ownerDocument;\n            off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n            off(ownerDocument, 'touchend', this._disableDelayedDrag);\n            off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n            off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n            off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n            off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n        },\n        _triggerDragStart: function _triggerDragStart(\n            /** Event */\n            evt,\n            /** Touch */\n            touch) {\n            touch = touch || evt.pointerType == 'touch' && evt;\n\n            if (!this.nativeDraggable || touch) {\n                if (this.options.supportPointer) {\n                    on(document, 'pointermove', this._onTouchMove);\n                } else if (touch) {\n                    on(document, 'touchmove', this._onTouchMove);\n                } else {\n                    on(document, 'mousemove', this._onTouchMove);\n                }\n            } else {\n                on(dragEl, 'dragend', this);\n                on(rootEl, 'dragstart', this._onDragStart);\n            }\n\n            try {\n                if (document.selection) {\n                    // Timeout neccessary for IE9\n                    _nextTick(function () {\n                        document.selection.empty();\n                    });\n                } else {\n                    window.getSelection().removeAllRanges();\n                }\n            } catch (err) {}\n        },\n        _dragStarted: function _dragStarted(fallback, evt) {\n\n            awaitingDragStarted = false;\n\n            if (rootEl && dragEl) {\n                pluginEvent('dragStarted', this, {\n                    evt: evt\n                });\n\n                if (this.nativeDraggable) {\n                    on(document, 'dragover', _checkOutsideTargetEl);\n                }\n\n                var options = this.options; // Apply effect\n\n                !fallback && toggleClass(dragEl, options.dragClass, false);\n                toggleClass(dragEl, options.ghostClass, true);\n                Sortable.active = this;\n                fallback && this._appendGhost(); // Drag start event\n\n                _dispatchEvent({\n                    sortable: this,\n                    name: 'start',\n                    originalEvent: evt\n                });\n            } else {\n                this._nulling();\n            }\n        },\n        _emulateDragOver: function _emulateDragOver() {\n            if (touchEvt) {\n                this._lastX = touchEvt.clientX;\n                this._lastY = touchEvt.clientY;\n\n                _hideGhostForTarget();\n\n                var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n                var parent = target;\n\n                while (target && target.shadowRoot) {\n                    target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n                    if (target === parent) break;\n                    parent = target;\n                }\n\n                dragEl.parentNode[expando]._isOutsideThisEl(target);\n\n                if (parent) {\n                    do {\n                        if (parent[expando]) {\n                            var inserted = void 0;\n                            inserted = parent[expando]._onDragOver({\n                                clientX: touchEvt.clientX,\n                                clientY: touchEvt.clientY,\n                                target: target,\n                                rootEl: parent\n                            });\n\n                            if (inserted && !this.options.dragoverBubble) {\n                                break;\n                            }\n                        }\n\n                        target = parent; // store last element\n                    }\n                        /* jshint boss:true */\n                    while (parent = parent.parentNode);\n                }\n\n                _unhideGhostForTarget();\n            }\n        },\n        _onTouchMove: function _onTouchMove(\n            /**TouchEvent*/\n            evt) {\n            if (tapEvt) {\n                var options = this.options,\n                    fallbackTolerance = options.fallbackTolerance,\n                    fallbackOffset = options.fallbackOffset,\n                    touch = evt.touches ? evt.touches[0] : evt,\n                    ghostMatrix = ghostEl && matrix(ghostEl, true),\n                    scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n                    scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n                    relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n                    dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n                    dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging\n\n                if (!Sortable.active && !awaitingDragStarted) {\n                    if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n                        return;\n                    }\n\n                    this._onDragStart(evt, true);\n                }\n\n                if (ghostEl) {\n                    if (ghostMatrix) {\n                        ghostMatrix.e += dx - (lastDx || 0);\n                        ghostMatrix.f += dy - (lastDy || 0);\n                    } else {\n                        ghostMatrix = {\n                            a: 1,\n                            b: 0,\n                            c: 0,\n                            d: 1,\n                            e: dx,\n                            f: dy\n                        };\n                    }\n\n                    var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n                    css(ghostEl, 'webkitTransform', cssMatrix);\n                    css(ghostEl, 'mozTransform', cssMatrix);\n                    css(ghostEl, 'msTransform', cssMatrix);\n                    css(ghostEl, 'transform', cssMatrix);\n                    lastDx = dx;\n                    lastDy = dy;\n                    touchEvt = touch;\n                }\n\n                evt.cancelable && evt.preventDefault();\n            }\n        },\n        _appendGhost: function _appendGhost() {\n            // Bug if using scale(): https://stackoverflow.com/questions/2637058\n            // Not being adjusted for\n            if (!ghostEl) {\n                var container = this.options.fallbackOnBody ? document.body : rootEl,\n                    rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n                    options = this.options; // Position absolutely\n\n                if (PositionGhostAbsolutely) {\n                    // Get relatively positioned parent\n                    ghostRelativeParent = container;\n\n                    while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n                        ghostRelativeParent = ghostRelativeParent.parentNode;\n                    }\n\n                    if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n                        if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n                        rect.top += ghostRelativeParent.scrollTop;\n                        rect.left += ghostRelativeParent.scrollLeft;\n                    } else {\n                        ghostRelativeParent = getWindowScrollingElement();\n                    }\n\n                    ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n                }\n\n                ghostEl = dragEl.cloneNode(true);\n                toggleClass(ghostEl, options.ghostClass, false);\n                toggleClass(ghostEl, options.fallbackClass, true);\n                toggleClass(ghostEl, options.dragClass, true);\n                css(ghostEl, 'transition', '');\n                css(ghostEl, 'transform', '');\n                css(ghostEl, 'box-sizing', 'border-box');\n                css(ghostEl, 'margin', 0);\n                css(ghostEl, 'top', rect.top);\n                css(ghostEl, 'left', rect.left);\n                css(ghostEl, 'width', rect.width);\n                css(ghostEl, 'height', rect.height);\n                css(ghostEl, 'opacity', '0.8');\n                css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n                css(ghostEl, 'zIndex', '100000');\n                css(ghostEl, 'pointerEvents', 'none');\n                Sortable.ghost = ghostEl;\n                container.appendChild(ghostEl); // Set transform-origin\n\n                css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n            }\n        },\n        _onDragStart: function _onDragStart(\n            /**Event*/\n            evt,\n            /**boolean*/\n            fallback) {\n            var _this = this;\n\n            var dataTransfer = evt.dataTransfer;\n            var options = _this.options;\n            pluginEvent('dragStart', this, {\n                evt: evt\n            });\n\n            if (Sortable.eventCanceled) {\n                this._onDrop();\n\n                return;\n            }\n\n            pluginEvent('setupClone', this);\n\n            if (!Sortable.eventCanceled) {\n                cloneEl = clone(dragEl);\n                cloneEl.removeAttribute(\"id\");\n                cloneEl.draggable = false;\n                cloneEl.style['will-change'] = '';\n\n                this._hideClone();\n\n                toggleClass(cloneEl, this.options.chosenClass, false);\n                Sortable.clone = cloneEl;\n            } // #1143: IFrame support workaround\n\n\n            _this.cloneId = _nextTick(function () {\n                pluginEvent('clone', _this);\n                if (Sortable.eventCanceled) return;\n\n                if (!_this.options.removeCloneOnHide) {\n                    rootEl.insertBefore(cloneEl, dragEl);\n                }\n\n                _this._hideClone();\n\n                _dispatchEvent({\n                    sortable: _this,\n                    name: 'clone'\n                });\n            });\n            !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events\n\n            if (fallback) {\n                ignoreNextClick = true;\n                _this._loopId = setInterval(_this._emulateDragOver, 50);\n            } else {\n                // Undo what was set in _prepareDragStart before drag started\n                off(document, 'mouseup', _this._onDrop);\n                off(document, 'touchend', _this._onDrop);\n                off(document, 'touchcancel', _this._onDrop);\n\n                if (dataTransfer) {\n                    dataTransfer.effectAllowed = 'move';\n                    options.setData && options.setData.call(_this, dataTransfer, dragEl);\n                }\n\n                on(document, 'drop', _this); // #1276 fix:\n\n                css(dragEl, 'transform', 'translateZ(0)');\n            }\n\n            awaitingDragStarted = true;\n            _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n            on(document, 'selectstart', _this);\n            moved = true;\n\n            if (Safari) {\n                css(document.body, 'user-select', 'none');\n            }\n        },\n        // Returns true - if no further action is needed (either inserted or another condition)\n        _onDragOver: function _onDragOver(\n            /**Event*/\n            evt) {\n            var el = this.el,\n                target = evt.target,\n                dragRect,\n                targetRect,\n                revert,\n                options = this.options,\n                group = options.group,\n                activeSortable = Sortable.active,\n                isOwner = activeGroup === group,\n                canSort = options.sort,\n                fromSortable = putSortable || activeSortable,\n                vertical,\n                _this = this,\n                completedFired = false;\n\n            if (_silent) return;\n\n            function dragOverEvent(name, extra) {\n                pluginEvent(name, _this, _objectSpread2({\n                    evt: evt,\n                    isOwner: isOwner,\n                    axis: vertical ? 'vertical' : 'horizontal',\n                    revert: revert,\n                    dragRect: dragRect,\n                    targetRect: targetRect,\n                    canSort: canSort,\n                    fromSortable: fromSortable,\n                    target: target,\n                    completed: completed,\n                    onMove: function onMove(target, after) {\n                        return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n                    },\n                    changed: changed\n                }, extra));\n            } // Capture animation state\n\n\n            function capture() {\n                dragOverEvent('dragOverAnimationCapture');\n\n                _this.captureAnimationState();\n\n                if (_this !== fromSortable) {\n                    fromSortable.captureAnimationState();\n                }\n            } // Return invocation when dragEl is inserted (or completed)\n\n\n            function completed(insertion) {\n                dragOverEvent('dragOverCompleted', {\n                    insertion: insertion\n                });\n\n                if (insertion) {\n                    // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n                    if (isOwner) {\n                        activeSortable._hideClone();\n                    } else {\n                        activeSortable._showClone(_this);\n                    }\n\n                    if (_this !== fromSortable) {\n                        // Set ghost class to new sortable's ghost class\n                        toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n                        toggleClass(dragEl, options.ghostClass, true);\n                    }\n\n                    if (putSortable !== _this && _this !== Sortable.active) {\n                        putSortable = _this;\n                    } else if (_this === Sortable.active && putSortable) {\n                        putSortable = null;\n                    } // Animation\n\n\n                    if (fromSortable === _this) {\n                        _this._ignoreWhileAnimating = target;\n                    }\n\n                    _this.animateAll(function () {\n                        dragOverEvent('dragOverAnimationComplete');\n                        _this._ignoreWhileAnimating = null;\n                    });\n\n                    if (_this !== fromSortable) {\n                        fromSortable.animateAll();\n                        fromSortable._ignoreWhileAnimating = null;\n                    }\n                } // Null lastTarget if it is not inside a previously swapped element\n\n\n                if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n                    lastTarget = null;\n                } // no bubbling and not fallback\n\n\n                if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n                    dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted\n\n\n                    !insertion && nearestEmptyInsertDetectEvent(evt);\n                }\n\n                !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n                return completedFired = true;\n            } // Call when dragEl has been inserted\n\n\n            function changed() {\n                newIndex = index(dragEl);\n                newDraggableIndex = index(dragEl, options.draggable);\n\n                _dispatchEvent({\n                    sortable: _this,\n                    name: 'change',\n                    toEl: el,\n                    newIndex: newIndex,\n                    newDraggableIndex: newDraggableIndex,\n                    originalEvent: evt\n                });\n            }\n\n            if (evt.preventDefault !== void 0) {\n                evt.cancelable && evt.preventDefault();\n            }\n\n            target = closest(target, options.draggable, el, true);\n            dragOverEvent('dragOver');\n            if (Sortable.eventCanceled) return completedFired;\n\n            if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n                return completed(false);\n            }\n\n            ignoreNextClick = false;\n\n            if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = parentEl !== rootEl) // Reverting item into the original list\n                : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n                vertical = this._getDirection(evt, target) === 'vertical';\n                dragRect = getRect(dragEl);\n                dragOverEvent('dragOverValid');\n                if (Sortable.eventCanceled) return completedFired;\n\n                if (revert) {\n                    parentEl = rootEl; // actualization\n\n                    capture();\n\n                    this._hideClone();\n\n                    dragOverEvent('revert');\n\n                    if (!Sortable.eventCanceled) {\n                        if (nextEl) {\n                            rootEl.insertBefore(dragEl, nextEl);\n                        } else {\n                            rootEl.appendChild(dragEl);\n                        }\n                    }\n\n                    return completed(true);\n                }\n\n                var elLastChild = lastChild(el, options.draggable);\n\n                if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n                    // Insert to end of list\n                    // If already at end of list: Do not insert\n                    if (elLastChild === dragEl) {\n                        return completed(false);\n                    } // if there is a last element, it is the target\n\n\n                    if (elLastChild && el === evt.target) {\n                        target = elLastChild;\n                    }\n\n                    if (target) {\n                        targetRect = getRect(target);\n                    }\n\n                    if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n                        capture();\n\n                        if (elLastChild && elLastChild.nextSibling) {\n                            // the last draggable element is not the last node\n                            el.insertBefore(dragEl, elLastChild.nextSibling);\n                        } else {\n                            el.appendChild(dragEl);\n                        }\n\n                        parentEl = el; // actualization\n\n                        changed();\n                        return completed(true);\n                    }\n                } else if (elLastChild && _ghostIsFirst(evt, vertical, this)) {\n                    // Insert to start of list\n                    var firstChild = getChild(el, 0, options, true);\n\n                    if (firstChild === dragEl) {\n                        return completed(false);\n                    }\n\n                    target = firstChild;\n                    targetRect = getRect(target);\n\n                    if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, false) !== false) {\n                        capture();\n                        el.insertBefore(dragEl, firstChild);\n                        parentEl = el; // actualization\n\n                        changed();\n                        return completed(true);\n                    }\n                } else if (target.parentNode === el) {\n                    targetRect = getRect(target);\n                    var direction = 0,\n                        targetBeforeFirstSwap,\n                        differentLevel = dragEl.parentNode !== el,\n                        differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n                        side1 = vertical ? 'top' : 'left',\n                        scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n                        scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n                    if (lastTarget !== target) {\n                        targetBeforeFirstSwap = targetRect[side1];\n                        pastFirstInvertThresh = false;\n                        isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n                    }\n\n                    direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n                    var sibling;\n\n                    if (direction !== 0) {\n                        // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n                        var dragIndex = index(dragEl);\n\n                        do {\n                            dragIndex -= direction;\n                            sibling = parentEl.children[dragIndex];\n                        } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n                    } // If dragEl is already beside target: Do not insert\n\n\n                    if (direction === 0 || sibling === target) {\n                        return completed(false);\n                    }\n\n                    lastTarget = target;\n                    lastDirection = direction;\n                    var nextSibling = target.nextElementSibling,\n                        after = false;\n                    after = direction === 1;\n\n                    var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n                    if (moveVector !== false) {\n                        if (moveVector === 1 || moveVector === -1) {\n                            after = moveVector === 1;\n                        }\n\n                        _silent = true;\n                        setTimeout(_unsilent, 30);\n                        capture();\n\n                        if (after && !nextSibling) {\n                            el.appendChild(dragEl);\n                        } else {\n                            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n                        } // Undo chrome's scroll adjustment (has no effect on other browsers)\n\n\n                        if (scrolledPastTop) {\n                            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n                        }\n\n                        parentEl = dragEl.parentNode; // actualization\n                        // must be done before animation\n\n                        if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n                            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n                        }\n\n                        changed();\n                        return completed(true);\n                    }\n                }\n\n                if (el.contains(dragEl)) {\n                    return completed(false);\n                }\n            }\n\n            return false;\n        },\n        _ignoreWhileAnimating: null,\n        _offMoveEvents: function _offMoveEvents() {\n            off(document, 'mousemove', this._onTouchMove);\n            off(document, 'touchmove', this._onTouchMove);\n            off(document, 'pointermove', this._onTouchMove);\n            off(document, 'dragover', nearestEmptyInsertDetectEvent);\n            off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n            off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n        },\n        _offUpEvents: function _offUpEvents() {\n            var ownerDocument = this.el.ownerDocument;\n            off(ownerDocument, 'mouseup', this._onDrop);\n            off(ownerDocument, 'touchend', this._onDrop);\n            off(ownerDocument, 'pointerup', this._onDrop);\n            off(ownerDocument, 'touchcancel', this._onDrop);\n            off(document, 'selectstart', this);\n        },\n        _onDrop: function _onDrop(\n            /**Event*/\n            evt) {\n            var el = this.el,\n                options = this.options; // Get the index of the dragged element within its parent\n\n            newIndex = index(dragEl);\n            newDraggableIndex = index(dragEl, options.draggable);\n            pluginEvent('drop', this, {\n                evt: evt\n            });\n            parentEl = dragEl && dragEl.parentNode; // Get again after plugin event\n\n            newIndex = index(dragEl);\n            newDraggableIndex = index(dragEl, options.draggable);\n\n            if (Sortable.eventCanceled) {\n                this._nulling();\n\n                return;\n            }\n\n            awaitingDragStarted = false;\n            isCircumstantialInvert = false;\n            pastFirstInvertThresh = false;\n            clearInterval(this._loopId);\n            clearTimeout(this._dragStartTimer);\n\n            _cancelNextTick(this.cloneId);\n\n            _cancelNextTick(this._dragStartId); // Unbind events\n\n\n            if (this.nativeDraggable) {\n                off(document, 'drop', this);\n                off(el, 'dragstart', this._onDragStart);\n            }\n\n            this._offMoveEvents();\n\n            this._offUpEvents();\n\n            if (Safari) {\n                css(document.body, 'user-select', '');\n            }\n\n            css(dragEl, 'transform', '');\n\n            if (evt) {\n                if (moved) {\n                    evt.cancelable && evt.preventDefault();\n                    !options.dropBubble && evt.stopPropagation();\n                }\n\n                ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n                if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n                    // Remove clone(s)\n                    cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n                }\n\n                if (dragEl) {\n                    if (this.nativeDraggable) {\n                        off(dragEl, 'dragend', this);\n                    }\n\n                    _disableDraggable(dragEl);\n\n                    dragEl.style['will-change'] = ''; // Remove classes\n                    // ghostClass is added in dragStarted\n\n                    if (moved && !awaitingDragStarted) {\n                        toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n                    }\n\n                    toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event\n\n                    _dispatchEvent({\n                        sortable: this,\n                        name: 'unchoose',\n                        toEl: parentEl,\n                        newIndex: null,\n                        newDraggableIndex: null,\n                        originalEvent: evt\n                    });\n\n                    if (rootEl !== parentEl) {\n                        if (newIndex >= 0) {\n                            // Add event\n                            _dispatchEvent({\n                                rootEl: parentEl,\n                                name: 'add',\n                                toEl: parentEl,\n                                fromEl: rootEl,\n                                originalEvent: evt\n                            }); // Remove event\n\n\n                            _dispatchEvent({\n                                sortable: this,\n                                name: 'remove',\n                                toEl: parentEl,\n                                originalEvent: evt\n                            }); // drag from one list and drop into another\n\n\n                            _dispatchEvent({\n                                rootEl: parentEl,\n                                name: 'sort',\n                                toEl: parentEl,\n                                fromEl: rootEl,\n                                originalEvent: evt\n                            });\n\n                            _dispatchEvent({\n                                sortable: this,\n                                name: 'sort',\n                                toEl: parentEl,\n                                originalEvent: evt\n                            });\n                        }\n\n                        putSortable && putSortable.save();\n                    } else {\n                        if (newIndex !== oldIndex) {\n                            if (newIndex >= 0) {\n                                // drag & drop within the same list\n                                _dispatchEvent({\n                                    sortable: this,\n                                    name: 'update',\n                                    toEl: parentEl,\n                                    originalEvent: evt\n                                });\n\n                                _dispatchEvent({\n                                    sortable: this,\n                                    name: 'sort',\n                                    toEl: parentEl,\n                                    originalEvent: evt\n                                });\n                            }\n                        }\n                    }\n\n                    if (Sortable.active) {\n                        /* jshint eqnull:true */\n                        if (newIndex == null || newIndex === -1) {\n                            newIndex = oldIndex;\n                            newDraggableIndex = oldDraggableIndex;\n                        }\n\n                        _dispatchEvent({\n                            sortable: this,\n                            name: 'end',\n                            toEl: parentEl,\n                            originalEvent: evt\n                        }); // Save sorting\n\n\n                        this.save();\n                    }\n                }\n            }\n\n            this._nulling();\n        },\n        _nulling: function _nulling() {\n            pluginEvent('nulling', this);\n            rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n            savedInputChecked.forEach(function (el) {\n                el.checked = true;\n            });\n            savedInputChecked.length = lastDx = lastDy = 0;\n        },\n        handleEvent: function handleEvent(\n            /**Event*/\n            evt) {\n            switch (evt.type) {\n                case 'drop':\n                case 'dragend':\n                    this._onDrop(evt);\n\n                    break;\n\n                case 'dragenter':\n                case 'dragover':\n                    if (dragEl) {\n                        this._onDragOver(evt);\n\n                        _globalDragOver(evt);\n                    }\n\n                    break;\n\n                case 'selectstart':\n                    evt.preventDefault();\n                    break;\n            }\n        },\n\n        /**\n         * Serializes the item into an array of string.\n         * @returns {String[]}\n         */\n        toArray: function toArray() {\n            var order = [],\n                el,\n                children = this.el.children,\n                i = 0,\n                n = children.length,\n                options = this.options;\n\n            for (; i < n; i++) {\n                el = children[i];\n\n                if (closest(el, options.draggable, this.el, false)) {\n                    order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n                }\n            }\n\n            return order;\n        },\n\n        /**\n         * Sorts the elements according to the array.\n         * @param  {String[]}  order  order of the items\n         */\n        sort: function sort(order, useAnimation) {\n            var items = {},\n                rootEl = this.el;\n            this.toArray().forEach(function (id, i) {\n                var el = rootEl.children[i];\n\n                if (closest(el, this.options.draggable, rootEl, false)) {\n                    items[id] = el;\n                }\n            }, this);\n            useAnimation && this.captureAnimationState();\n            order.forEach(function (id) {\n                if (items[id]) {\n                    rootEl.removeChild(items[id]);\n                    rootEl.appendChild(items[id]);\n                }\n            });\n            useAnimation && this.animateAll();\n        },\n\n        /**\n         * Save the current sorting\n         */\n        save: function save() {\n            var store = this.options.store;\n            store && store.set && store.set(this);\n        },\n\n        /**\n         * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n         * @param   {HTMLElement}  el\n         * @param   {String}       [selector]  default: `options.draggable`\n         * @returns {HTMLElement|null}\n         */\n        closest: function closest$1(el, selector) {\n            return closest(el, selector || this.options.draggable, this.el, false);\n        },\n\n        /**\n         * Set/get option\n         * @param   {string} name\n         * @param   {*}      [value]\n         * @returns {*}\n         */\n        option: function option(name, value) {\n            var options = this.options;\n\n            if (value === void 0) {\n                return options[name];\n            } else {\n                var modifiedValue = PluginManager.modifyOption(this, name, value);\n\n                if (typeof modifiedValue !== 'undefined') {\n                    options[name] = modifiedValue;\n                } else {\n                    options[name] = value;\n                }\n\n                if (name === 'group') {\n                    _prepareGroup(options);\n                }\n            }\n        },\n\n        /**\n         * Destroy\n         */\n        destroy: function destroy() {\n            pluginEvent('destroy', this);\n            var el = this.el;\n            el[expando] = null;\n            off(el, 'mousedown', this._onTapStart);\n            off(el, 'touchstart', this._onTapStart);\n            off(el, 'pointerdown', this._onTapStart);\n\n            if (this.nativeDraggable) {\n                off(el, 'dragover', this);\n                off(el, 'dragenter', this);\n            } // Remove draggable attributes\n\n\n            Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n                el.removeAttribute('draggable');\n            });\n\n            this._onDrop();\n\n            this._disableDelayedDragEvents();\n\n            sortables.splice(sortables.indexOf(this.el), 1);\n            this.el = el = null;\n        },\n        _hideClone: function _hideClone() {\n            if (!cloneHidden) {\n                pluginEvent('hideClone', this);\n                if (Sortable.eventCanceled) return;\n                css(cloneEl, 'display', 'none');\n\n                if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n                    cloneEl.parentNode.removeChild(cloneEl);\n                }\n\n                cloneHidden = true;\n            }\n        },\n        _showClone: function _showClone(putSortable) {\n            if (putSortable.lastPutMode !== 'clone') {\n                this._hideClone();\n\n                return;\n            }\n\n            if (cloneHidden) {\n                pluginEvent('showClone', this);\n                if (Sortable.eventCanceled) return; // show clone at dragEl or original position\n\n                if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {\n                    rootEl.insertBefore(cloneEl, dragEl);\n                } else if (nextEl) {\n                    rootEl.insertBefore(cloneEl, nextEl);\n                } else {\n                    rootEl.appendChild(cloneEl);\n                }\n\n                if (this.options.group.revertClone) {\n                    this.animate(dragEl, cloneEl);\n                }\n\n                css(cloneEl, 'display', '');\n                cloneHidden = false;\n            }\n        }\n    };\n\nfunction _globalDragOver(\n    /**Event*/\n    evt) {\n    if (evt.dataTransfer) {\n        evt.dataTransfer.dropEffect = 'move';\n    }\n\n    evt.cancelable && evt.preventDefault();\n}\n\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n    var evt,\n        sortable = fromEl[expando],\n        onMoveFn = sortable.options.onMove,\n        retVal; // Support for new CustomEvent feature\n\n    if (window.CustomEvent && !IE11OrLess && !Edge) {\n        evt = new CustomEvent('move', {\n            bubbles: true,\n            cancelable: true\n        });\n    } else {\n        evt = document.createEvent('Event');\n        evt.initEvent('move', true, true);\n    }\n\n    evt.to = toEl;\n    evt.from = fromEl;\n    evt.dragged = dragEl;\n    evt.draggedRect = dragRect;\n    evt.related = targetEl || toEl;\n    evt.relatedRect = targetRect || getRect(toEl);\n    evt.willInsertAfter = willInsertAfter;\n    evt.originalEvent = originalEvent;\n    fromEl.dispatchEvent(evt);\n\n    if (onMoveFn) {\n        retVal = onMoveFn.call(sortable, evt, originalEvent);\n    }\n\n    return retVal;\n}\n\nfunction _disableDraggable(el) {\n    el.draggable = false;\n}\n\nfunction _unsilent() {\n    _silent = false;\n}\n\nfunction _ghostIsFirst(evt, vertical, sortable) {\n    var rect = getRect(getChild(sortable.el, 0, sortable.options, true));\n    var spacer = 10;\n    return vertical ? evt.clientX < rect.left - spacer || evt.clientY < rect.top && evt.clientX < rect.right : evt.clientY < rect.top - spacer || evt.clientY < rect.bottom && evt.clientX < rect.left;\n}\n\nfunction _ghostIsLast(evt, vertical, sortable) {\n    var rect = getRect(lastChild(sortable.el, sortable.options.draggable));\n    var spacer = 10;\n    return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;\n}\n\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n    var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n        targetLength = vertical ? targetRect.height : targetRect.width,\n        targetS1 = vertical ? targetRect.top : targetRect.left,\n        targetS2 = vertical ? targetRect.bottom : targetRect.right,\n        invert = false;\n\n    if (!invertSwap) {\n        // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n        if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n            // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n            // check if past first invert threshold on side opposite of lastDirection\n            if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n                // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n                pastFirstInvertThresh = true;\n            }\n\n            if (!pastFirstInvertThresh) {\n                // dragEl shadow (target move distance shadow)\n                if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n                    : mouseOnAxis > targetS2 - targetMoveDistance) {\n                    return -lastDirection;\n                }\n            } else {\n                invert = true;\n            }\n        } else {\n            // Regular\n            if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n                return _getInsertDirection(target);\n            }\n        }\n    }\n\n    invert = invert || invertSwap;\n\n    if (invert) {\n        // Invert of regular\n        if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n            return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n        }\n    }\n\n    return 0;\n}\n/**\n * Gets the direction dragEl must be swapped relative to target in order to make it\n * seem that dragEl has been \"inserted\" into that element's position\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n * @return {Number}                   Direction dragEl must be swapped\n */\n\n\nfunction _getInsertDirection(target) {\n    if (index(dragEl) < index(target)) {\n        return 1;\n    } else {\n        return -1;\n    }\n}\n/**\n * Generate id\n * @param   {HTMLElement} el\n * @returns {String}\n * @private\n */\n\n\nfunction _generateId(el) {\n    var str = el.tagName + el.className + el.src + el.href + el.textContent,\n        i = str.length,\n        sum = 0;\n\n    while (i--) {\n        sum += str.charCodeAt(i);\n    }\n\n    return sum.toString(36);\n}\n\nfunction _saveInputCheckedState(root) {\n    savedInputChecked.length = 0;\n    var inputs = root.getElementsByTagName('input');\n    var idx = inputs.length;\n\n    while (idx--) {\n        var el = inputs[idx];\n        el.checked && savedInputChecked.push(el);\n    }\n}\n\nfunction _nextTick(fn) {\n    return setTimeout(fn, 0);\n}\n\nfunction _cancelNextTick(id) {\n    return clearTimeout(id);\n} // Fixed #973:\n\n\nif (documentExists) {\n    on(document, 'touchmove', function (evt) {\n        if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n            evt.preventDefault();\n        }\n    });\n} // Export utils\n\n\nSortable.utils = {\n    on: on,\n    off: off,\n    css: css,\n    find: find,\n    is: function is(el, selector) {\n        return !!closest(el, selector, el, false);\n    },\n    extend: extend,\n    throttle: throttle,\n    closest: closest,\n    toggleClass: toggleClass,\n    clone: clone,\n    index: index,\n    nextTick: _nextTick,\n    cancelNextTick: _cancelNextTick,\n    detectDirection: _detectDirection,\n    getChild: getChild\n};\n/**\n * Get the Sortable instance of an element\n * @param  {HTMLElement} element The element\n * @return {Sortable|undefined}         The instance of Sortable\n */\n\nSortable.get = function (element) {\n    return element[expando];\n};\n/**\n * Mount a plugin to Sortable\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\n */\n\n\nSortable.mount = function () {\n    for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n        plugins[_key] = arguments[_key];\n    }\n\n    if (plugins[0].constructor === Array) plugins = plugins[0];\n    plugins.forEach(function (plugin) {\n        if (!plugin.prototype || !plugin.prototype.constructor) {\n            throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n        }\n\n        if (plugin.utils) Sortable.utils = _objectSpread2(_objectSpread2({}, Sortable.utils), plugin.utils);\n        PluginManager.mount(plugin);\n    });\n};\n/**\n * Create sortable instance\n * @param {HTMLElement}  el\n * @param {Object}      [options]\n */\n\n\nSortable.create = function (el, options) {\n    return new Sortable(el, options);\n}; // Export\n\n\nSortable.version = version;\n\nvar autoScrolls = [],\n    scrollEl,\n    scrollRootEl,\n    scrolling = false,\n    lastAutoScrollX,\n    lastAutoScrollY,\n    touchEvt$1,\n    pointerElemChangedInterval;\n\nfunction AutoScrollPlugin() {\n    function AutoScroll() {\n        this.defaults = {\n            scroll: true,\n            forceAutoScrollFallback: false,\n            scrollSensitivity: 30,\n            scrollSpeed: 10,\n            bubbleScroll: true\n        }; // Bind all private methods\n\n        for (var fn in this) {\n            if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n                this[fn] = this[fn].bind(this);\n            }\n        }\n    }\n\n    AutoScroll.prototype = {\n        dragStarted: function dragStarted(_ref) {\n            var originalEvent = _ref.originalEvent;\n\n            if (this.sortable.nativeDraggable) {\n                on(document, 'dragover', this._handleAutoScroll);\n            } else {\n                if (this.options.supportPointer) {\n                    on(document, 'pointermove', this._handleFallbackAutoScroll);\n                } else if (originalEvent.touches) {\n                    on(document, 'touchmove', this._handleFallbackAutoScroll);\n                } else {\n                    on(document, 'mousemove', this._handleFallbackAutoScroll);\n                }\n            }\n        },\n        dragOverCompleted: function dragOverCompleted(_ref2) {\n            var originalEvent = _ref2.originalEvent;\n\n            // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n            if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n                this._handleAutoScroll(originalEvent);\n            }\n        },\n        drop: function drop() {\n            if (this.sortable.nativeDraggable) {\n                off(document, 'dragover', this._handleAutoScroll);\n            } else {\n                off(document, 'pointermove', this._handleFallbackAutoScroll);\n                off(document, 'touchmove', this._handleFallbackAutoScroll);\n                off(document, 'mousemove', this._handleFallbackAutoScroll);\n            }\n\n            clearPointerElemChangedInterval();\n            clearAutoScrolls();\n            cancelThrottle();\n        },\n        nulling: function nulling() {\n            touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n            autoScrolls.length = 0;\n        },\n        _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n            this._handleAutoScroll(evt, true);\n        },\n        _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n            var _this = this;\n\n            var x = (evt.touches ? evt.touches[0] : evt).clientX,\n                y = (evt.touches ? evt.touches[0] : evt).clientY,\n                elem = document.elementFromPoint(x, y);\n            touchEvt$1 = evt; // IE does not seem to have native autoscroll,\n            // Edge's autoscroll seems too conditional,\n            // MACOS Safari does not have autoscroll,\n            // Firefox and Chrome are good\n\n            if (fallback || this.options.forceAutoScrollFallback || Edge || IE11OrLess || Safari) {\n                autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change\n\n                var ogElemScroller = getParentAutoScrollElement(elem, true);\n\n                if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n                    pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour\n\n                    pointerElemChangedInterval = setInterval(function () {\n                        var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n\n                        if (newElem !== ogElemScroller) {\n                            ogElemScroller = newElem;\n                            clearAutoScrolls();\n                        }\n\n                        autoScroll(evt, _this.options, newElem, fallback);\n                    }, 10);\n                    lastAutoScrollX = x;\n                    lastAutoScrollY = y;\n                }\n            } else {\n                // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n                if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n                    clearAutoScrolls();\n                    return;\n                }\n\n                autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n            }\n        }\n    };\n    return _extends(AutoScroll, {\n        pluginName: 'scroll',\n        initializeByDefault: true\n    });\n}\n\nfunction clearAutoScrolls() {\n    autoScrolls.forEach(function (autoScroll) {\n        clearInterval(autoScroll.pid);\n    });\n    autoScrolls = [];\n}\n\nfunction clearPointerElemChangedInterval() {\n    clearInterval(pointerElemChangedInterval);\n}\n\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n    // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n    if (!options.scroll) return;\n    var x = (evt.touches ? evt.touches[0] : evt).clientX,\n        y = (evt.touches ? evt.touches[0] : evt).clientY,\n        sens = options.scrollSensitivity,\n        speed = options.scrollSpeed,\n        winScroller = getWindowScrollingElement();\n    var scrollThisInstance = false,\n        scrollCustomFn; // New scroll root, set scrollEl\n\n    if (scrollRootEl !== rootEl) {\n        scrollRootEl = rootEl;\n        clearAutoScrolls();\n        scrollEl = options.scroll;\n        scrollCustomFn = options.scrollFn;\n\n        if (scrollEl === true) {\n            scrollEl = getParentAutoScrollElement(rootEl, true);\n        }\n    }\n\n    var layersOut = 0;\n    var currentParent = scrollEl;\n\n    do {\n        var el = currentParent,\n            rect = getRect(el),\n            top = rect.top,\n            bottom = rect.bottom,\n            left = rect.left,\n            right = rect.right,\n            width = rect.width,\n            height = rect.height,\n            canScrollX = void 0,\n            canScrollY = void 0,\n            scrollWidth = el.scrollWidth,\n            scrollHeight = el.scrollHeight,\n            elCSS = css(el),\n            scrollPosX = el.scrollLeft,\n            scrollPosY = el.scrollTop;\n\n        if (el === winScroller) {\n            canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n            canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n        } else {\n            canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n            canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n        }\n\n        var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n        var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n\n        if (!autoScrolls[layersOut]) {\n            for (var i = 0; i <= layersOut; i++) {\n                if (!autoScrolls[i]) {\n                    autoScrolls[i] = {};\n                }\n            }\n        }\n\n        if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n            autoScrolls[layersOut].el = el;\n            autoScrolls[layersOut].vx = vx;\n            autoScrolls[layersOut].vy = vy;\n            clearInterval(autoScrolls[layersOut].pid);\n\n            if (vx != 0 || vy != 0) {\n                scrollThisInstance = true;\n                /* jshint loopfunc:true */\n\n                autoScrolls[layersOut].pid = setInterval(function () {\n                    // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n                    if (isFallback && this.layer === 0) {\n                        Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n\n                    }\n\n                    var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n                    var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n                    if (typeof scrollCustomFn === 'function') {\n                        if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n                            return;\n                        }\n                    }\n\n                    scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n                }.bind({\n                    layer: layersOut\n                }), 24);\n            }\n        }\n\n        layersOut++;\n    } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n\n    scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nvar drop = function drop(_ref) {\n    var originalEvent = _ref.originalEvent,\n        putSortable = _ref.putSortable,\n        dragEl = _ref.dragEl,\n        activeSortable = _ref.activeSortable,\n        dispatchSortableEvent = _ref.dispatchSortableEvent,\n        hideGhostForTarget = _ref.hideGhostForTarget,\n        unhideGhostForTarget = _ref.unhideGhostForTarget;\n    if (!originalEvent) return;\n    var toSortable = putSortable || activeSortable;\n    hideGhostForTarget();\n    var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n    var target = document.elementFromPoint(touch.clientX, touch.clientY);\n    unhideGhostForTarget();\n\n    if (toSortable && !toSortable.el.contains(target)) {\n        dispatchSortableEvent('spill');\n        this.onSpill({\n            dragEl: dragEl,\n            putSortable: putSortable\n        });\n    }\n};\n\nfunction Revert() {}\n\nRevert.prototype = {\n    startIndex: null,\n    dragStart: function dragStart(_ref2) {\n        var oldDraggableIndex = _ref2.oldDraggableIndex;\n        this.startIndex = oldDraggableIndex;\n    },\n    onSpill: function onSpill(_ref3) {\n        var dragEl = _ref3.dragEl,\n            putSortable = _ref3.putSortable;\n        this.sortable.captureAnimationState();\n\n        if (putSortable) {\n            putSortable.captureAnimationState();\n        }\n\n        var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n\n        if (nextSibling) {\n            this.sortable.el.insertBefore(dragEl, nextSibling);\n        } else {\n            this.sortable.el.appendChild(dragEl);\n        }\n\n        this.sortable.animateAll();\n\n        if (putSortable) {\n            putSortable.animateAll();\n        }\n    },\n    drop: drop\n};\n\n_extends(Revert, {\n    pluginName: 'revertOnSpill'\n});\n\nfunction Remove() {}\n\nRemove.prototype = {\n    onSpill: function onSpill(_ref4) {\n        var dragEl = _ref4.dragEl,\n            putSortable = _ref4.putSortable;\n        var parentSortable = putSortable || this.sortable;\n        parentSortable.captureAnimationState();\n        dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n        parentSortable.animateAll();\n    },\n    drop: drop\n};\n\n_extends(Remove, {\n    pluginName: 'removeOnSpill'\n});\n\nvar lastSwapEl;\n\nfunction SwapPlugin() {\n    function Swap() {\n        this.defaults = {\n            swapClass: 'sortable-swap-highlight'\n        };\n    }\n\n    Swap.prototype = {\n        dragStart: function dragStart(_ref) {\n            var dragEl = _ref.dragEl;\n            lastSwapEl = dragEl;\n        },\n        dragOverValid: function dragOverValid(_ref2) {\n            var completed = _ref2.completed,\n                target = _ref2.target,\n                onMove = _ref2.onMove,\n                activeSortable = _ref2.activeSortable,\n                changed = _ref2.changed,\n                cancel = _ref2.cancel;\n            if (!activeSortable.options.swap) return;\n            var el = this.sortable.el,\n                options = this.options;\n\n            if (target && target !== el) {\n                var prevSwapEl = lastSwapEl;\n\n                if (onMove(target) !== false) {\n                    toggleClass(target, options.swapClass, true);\n                    lastSwapEl = target;\n                } else {\n                    lastSwapEl = null;\n                }\n\n                if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n                    toggleClass(prevSwapEl, options.swapClass, false);\n                }\n            }\n\n            changed();\n            completed(true);\n            cancel();\n        },\n        drop: function drop(_ref3) {\n            var activeSortable = _ref3.activeSortable,\n                putSortable = _ref3.putSortable,\n                dragEl = _ref3.dragEl;\n            var toSortable = putSortable || this.sortable;\n            var options = this.options;\n            lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n\n            if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n                if (dragEl !== lastSwapEl) {\n                    toSortable.captureAnimationState();\n                    if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n                    swapNodes(dragEl, lastSwapEl);\n                    toSortable.animateAll();\n                    if (toSortable !== activeSortable) activeSortable.animateAll();\n                }\n            }\n        },\n        nulling: function nulling() {\n            lastSwapEl = null;\n        }\n    };\n    return _extends(Swap, {\n        pluginName: 'swap',\n        eventProperties: function eventProperties() {\n            return {\n                swapItem: lastSwapEl\n            };\n        }\n    });\n}\n\nfunction swapNodes(n1, n2) {\n    var p1 = n1.parentNode,\n        p2 = n2.parentNode,\n        i1,\n        i2;\n    if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n    i1 = index(n1);\n    i2 = index(n2);\n\n    if (p1.isEqualNode(p2) && i1 < i2) {\n        i2++;\n    }\n\n    p1.insertBefore(n2, p1.children[i1]);\n    p2.insertBefore(n1, p2.children[i2]);\n}\n\nvar multiDragElements = [],\n    multiDragClones = [],\n    lastMultiDragSelect,\n    // for selection with modifier key down (SHIFT)\n    multiDragSortable,\n    initialFolding = false,\n    // Initial multi-drag fold when drag started\n    folding = false,\n    // Folding any other time\n    dragStarted = false,\n    dragEl$1,\n    clonesFromRect,\n    clonesHidden;\n\nfunction MultiDragPlugin() {\n    function MultiDrag(sortable) {\n        // Bind all private methods\n        for (var fn in this) {\n            if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n                this[fn] = this[fn].bind(this);\n            }\n        }\n\n        if (!sortable.options.avoidImplicitDeselect) {\n            if (sortable.options.supportPointer) {\n                on(document, 'pointerup', this._deselectMultiDrag);\n            } else {\n                on(document, 'mouseup', this._deselectMultiDrag);\n                on(document, 'touchend', this._deselectMultiDrag);\n            }\n        }\n\n        on(document, 'keydown', this._checkKeyDown);\n        on(document, 'keyup', this._checkKeyUp);\n        this.defaults = {\n            selectedClass: 'sortable-selected',\n            multiDragKey: null,\n            avoidImplicitDeselect: false,\n            setData: function setData(dataTransfer, dragEl) {\n                var data = '';\n\n                if (multiDragElements.length && multiDragSortable === sortable) {\n                    multiDragElements.forEach(function (multiDragElement, i) {\n                        data += (!i ? '' : ', ') + multiDragElement.textContent;\n                    });\n                } else {\n                    data = dragEl.textContent;\n                }\n\n                dataTransfer.setData('Text', data);\n            }\n        };\n    }\n\n    MultiDrag.prototype = {\n        multiDragKeyDown: false,\n        isMultiDrag: false,\n        delayStartGlobal: function delayStartGlobal(_ref) {\n            var dragged = _ref.dragEl;\n            dragEl$1 = dragged;\n        },\n        delayEnded: function delayEnded() {\n            this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n        },\n        setupClone: function setupClone(_ref2) {\n            var sortable = _ref2.sortable,\n                cancel = _ref2.cancel;\n            if (!this.isMultiDrag) return;\n\n            for (var i = 0; i < multiDragElements.length; i++) {\n                multiDragClones.push(clone(multiDragElements[i]));\n                multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n                multiDragClones[i].draggable = false;\n                multiDragClones[i].style['will-change'] = '';\n                toggleClass(multiDragClones[i], this.options.selectedClass, false);\n                multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\n            }\n\n            sortable._hideClone();\n\n            cancel();\n        },\n        clone: function clone(_ref3) {\n            var sortable = _ref3.sortable,\n                rootEl = _ref3.rootEl,\n                dispatchSortableEvent = _ref3.dispatchSortableEvent,\n                cancel = _ref3.cancel;\n            if (!this.isMultiDrag) return;\n\n            if (!this.options.removeCloneOnHide) {\n                if (multiDragElements.length && multiDragSortable === sortable) {\n                    insertMultiDragClones(true, rootEl);\n                    dispatchSortableEvent('clone');\n                    cancel();\n                }\n            }\n        },\n        showClone: function showClone(_ref4) {\n            var cloneNowShown = _ref4.cloneNowShown,\n                rootEl = _ref4.rootEl,\n                cancel = _ref4.cancel;\n            if (!this.isMultiDrag) return;\n            insertMultiDragClones(false, rootEl);\n            multiDragClones.forEach(function (clone) {\n                css(clone, 'display', '');\n            });\n            cloneNowShown();\n            clonesHidden = false;\n            cancel();\n        },\n        hideClone: function hideClone(_ref5) {\n            var _this = this;\n\n            var sortable = _ref5.sortable,\n                cloneNowHidden = _ref5.cloneNowHidden,\n                cancel = _ref5.cancel;\n            if (!this.isMultiDrag) return;\n            multiDragClones.forEach(function (clone) {\n                css(clone, 'display', 'none');\n\n                if (_this.options.removeCloneOnHide && clone.parentNode) {\n                    clone.parentNode.removeChild(clone);\n                }\n            });\n            cloneNowHidden();\n            clonesHidden = true;\n            cancel();\n        },\n        dragStartGlobal: function dragStartGlobal(_ref6) {\n            var sortable = _ref6.sortable;\n\n            if (!this.isMultiDrag && multiDragSortable) {\n                multiDragSortable.multiDrag._deselectMultiDrag();\n            }\n\n            multiDragElements.forEach(function (multiDragElement) {\n                multiDragElement.sortableIndex = index(multiDragElement);\n            }); // Sort multi-drag elements\n\n            multiDragElements = multiDragElements.sort(function (a, b) {\n                return a.sortableIndex - b.sortableIndex;\n            });\n            dragStarted = true;\n        },\n        dragStarted: function dragStarted(_ref7) {\n            var _this2 = this;\n\n            var sortable = _ref7.sortable;\n            if (!this.isMultiDrag) return;\n\n            if (this.options.sort) {\n                // Capture rects,\n                // hide multi drag elements (by positioning them absolute),\n                // set multi drag elements rects to dragRect,\n                // show multi drag elements,\n                // animate to rects,\n                // unset rects & remove from DOM\n                sortable.captureAnimationState();\n\n                if (this.options.animation) {\n                    multiDragElements.forEach(function (multiDragElement) {\n                        if (multiDragElement === dragEl$1) return;\n                        css(multiDragElement, 'position', 'absolute');\n                    });\n                    var dragRect = getRect(dragEl$1, false, true, true);\n                    multiDragElements.forEach(function (multiDragElement) {\n                        if (multiDragElement === dragEl$1) return;\n                        setRect(multiDragElement, dragRect);\n                    });\n                    folding = true;\n                    initialFolding = true;\n                }\n            }\n\n            sortable.animateAll(function () {\n                folding = false;\n                initialFolding = false;\n\n                if (_this2.options.animation) {\n                    multiDragElements.forEach(function (multiDragElement) {\n                        unsetRect(multiDragElement);\n                    });\n                } // Remove all auxiliary multidrag items from el, if sorting enabled\n\n\n                if (_this2.options.sort) {\n                    removeMultiDragElements();\n                }\n            });\n        },\n        dragOver: function dragOver(_ref8) {\n            var target = _ref8.target,\n                completed = _ref8.completed,\n                cancel = _ref8.cancel;\n\n            if (folding && ~multiDragElements.indexOf(target)) {\n                completed(false);\n                cancel();\n            }\n        },\n        revert: function revert(_ref9) {\n            var fromSortable = _ref9.fromSortable,\n                rootEl = _ref9.rootEl,\n                sortable = _ref9.sortable,\n                dragRect = _ref9.dragRect;\n\n            if (multiDragElements.length > 1) {\n                // Setup unfold animation\n                multiDragElements.forEach(function (multiDragElement) {\n                    sortable.addAnimationState({\n                        target: multiDragElement,\n                        rect: folding ? getRect(multiDragElement) : dragRect\n                    });\n                    unsetRect(multiDragElement);\n                    multiDragElement.fromRect = dragRect;\n                    fromSortable.removeAnimationState(multiDragElement);\n                });\n                folding = false;\n                insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n            }\n        },\n        dragOverCompleted: function dragOverCompleted(_ref10) {\n            var sortable = _ref10.sortable,\n                isOwner = _ref10.isOwner,\n                insertion = _ref10.insertion,\n                activeSortable = _ref10.activeSortable,\n                parentEl = _ref10.parentEl,\n                putSortable = _ref10.putSortable;\n            var options = this.options;\n\n            if (insertion) {\n                // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n                if (isOwner) {\n                    activeSortable._hideClone();\n                }\n\n                initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location\n\n                if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n                    // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n                    var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n                    multiDragElements.forEach(function (multiDragElement) {\n                        if (multiDragElement === dragEl$1) return;\n                        setRect(multiDragElement, dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n                        // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n\n                        parentEl.appendChild(multiDragElement);\n                    });\n                    folding = true;\n                } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n\n\n                if (!isOwner) {\n                    // Only remove if not folding (folding will remove them anyways)\n                    if (!folding) {\n                        removeMultiDragElements();\n                    }\n\n                    if (multiDragElements.length > 1) {\n                        var clonesHiddenBefore = clonesHidden;\n\n                        activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden\n\n\n                        if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n                            multiDragClones.forEach(function (clone) {\n                                activeSortable.addAnimationState({\n                                    target: clone,\n                                    rect: clonesFromRect\n                                });\n                                clone.fromRect = clonesFromRect;\n                                clone.thisAnimationDuration = null;\n                            });\n                        }\n                    } else {\n                        activeSortable._showClone(sortable);\n                    }\n                }\n            }\n        },\n        dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n            var dragRect = _ref11.dragRect,\n                isOwner = _ref11.isOwner,\n                activeSortable = _ref11.activeSortable;\n            multiDragElements.forEach(function (multiDragElement) {\n                multiDragElement.thisAnimationDuration = null;\n            });\n\n            if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n                clonesFromRect = _extends({}, dragRect);\n                var dragMatrix = matrix(dragEl$1, true);\n                clonesFromRect.top -= dragMatrix.f;\n                clonesFromRect.left -= dragMatrix.e;\n            }\n        },\n        dragOverAnimationComplete: function dragOverAnimationComplete() {\n            if (folding) {\n                folding = false;\n                removeMultiDragElements();\n            }\n        },\n        drop: function drop(_ref12) {\n            var evt = _ref12.originalEvent,\n                rootEl = _ref12.rootEl,\n                parentEl = _ref12.parentEl,\n                sortable = _ref12.sortable,\n                dispatchSortableEvent = _ref12.dispatchSortableEvent,\n                oldIndex = _ref12.oldIndex,\n                putSortable = _ref12.putSortable;\n            var toSortable = putSortable || this.sortable;\n            if (!evt) return;\n            var options = this.options,\n                children = parentEl.children; // Multi-drag selection\n\n            if (!dragStarted) {\n                if (options.multiDragKey && !this.multiDragKeyDown) {\n                    this._deselectMultiDrag();\n                }\n\n                toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n\n                if (!~multiDragElements.indexOf(dragEl$1)) {\n                    multiDragElements.push(dragEl$1);\n                    dispatchEvent({\n                        sortable: sortable,\n                        rootEl: rootEl,\n                        name: 'select',\n                        targetEl: dragEl$1,\n                        originalEvent: evt\n                    }); // Modifier activated, select from last to dragEl\n\n                    if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n                        var lastIndex = index(lastMultiDragSelect),\n                            currentIndex = index(dragEl$1);\n\n                        if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n                            // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n                            // (but previous selection existed)\n                            var n, i;\n\n                            if (currentIndex > lastIndex) {\n                                i = lastIndex;\n                                n = currentIndex;\n                            } else {\n                                i = currentIndex;\n                                n = lastIndex + 1;\n                            }\n\n                            for (; i < n; i++) {\n                                if (~multiDragElements.indexOf(children[i])) continue;\n                                toggleClass(children[i], options.selectedClass, true);\n                                multiDragElements.push(children[i]);\n                                dispatchEvent({\n                                    sortable: sortable,\n                                    rootEl: rootEl,\n                                    name: 'select',\n                                    targetEl: children[i],\n                                    originalEvent: evt\n                                });\n                            }\n                        }\n                    } else {\n                        lastMultiDragSelect = dragEl$1;\n                    }\n\n                    multiDragSortable = toSortable;\n                } else {\n                    multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n                    lastMultiDragSelect = null;\n                    dispatchEvent({\n                        sortable: sortable,\n                        rootEl: rootEl,\n                        name: 'deselect',\n                        targetEl: dragEl$1,\n                        originalEvent: evt\n                    });\n                }\n            } // Multi-drag drop\n\n\n            if (dragStarted && this.isMultiDrag) {\n                folding = false; // Do not \"unfold\" after around dragEl if reverted\n\n                if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n                    var dragRect = getRect(dragEl$1),\n                        multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n                    if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n                    toSortable.captureAnimationState();\n\n                    if (!initialFolding) {\n                        if (options.animation) {\n                            dragEl$1.fromRect = dragRect;\n                            multiDragElements.forEach(function (multiDragElement) {\n                                multiDragElement.thisAnimationDuration = null;\n\n                                if (multiDragElement !== dragEl$1) {\n                                    var rect = folding ? getRect(multiDragElement) : dragRect;\n                                    multiDragElement.fromRect = rect; // Prepare unfold animation\n\n                                    toSortable.addAnimationState({\n                                        target: multiDragElement,\n                                        rect: rect\n                                    });\n                                }\n                            });\n                        } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n                        // properly they must all be removed\n\n\n                        removeMultiDragElements();\n                        multiDragElements.forEach(function (multiDragElement) {\n                            if (children[multiDragIndex]) {\n                                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\n                            } else {\n                                parentEl.appendChild(multiDragElement);\n                            }\n\n                            multiDragIndex++;\n                        }); // If initial folding is done, the elements may have changed position because they are now\n                        // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n                        // must be fired here as Sortable will not.\n\n                        if (oldIndex === index(dragEl$1)) {\n                            var update = false;\n                            multiDragElements.forEach(function (multiDragElement) {\n                                if (multiDragElement.sortableIndex !== index(multiDragElement)) {\n                                    update = true;\n                                    return;\n                                }\n                            });\n\n                            if (update) {\n                                dispatchSortableEvent('update');\n                            }\n                        }\n                    } // Must be done after capturing individual rects (scroll bar)\n\n\n                    multiDragElements.forEach(function (multiDragElement) {\n                        unsetRect(multiDragElement);\n                    });\n                    toSortable.animateAll();\n                }\n\n                multiDragSortable = toSortable;\n            } // Remove clones if necessary\n\n\n            if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n                multiDragClones.forEach(function (clone) {\n                    clone.parentNode && clone.parentNode.removeChild(clone);\n                });\n            }\n        },\n        nullingGlobal: function nullingGlobal() {\n            this.isMultiDrag = dragStarted = false;\n            multiDragClones.length = 0;\n        },\n        destroyGlobal: function destroyGlobal() {\n            this._deselectMultiDrag();\n\n            off(document, 'pointerup', this._deselectMultiDrag);\n            off(document, 'mouseup', this._deselectMultiDrag);\n            off(document, 'touchend', this._deselectMultiDrag);\n            off(document, 'keydown', this._checkKeyDown);\n            off(document, 'keyup', this._checkKeyUp);\n        },\n        _deselectMultiDrag: function _deselectMultiDrag(evt) {\n            if (typeof dragStarted !== \"undefined\" && dragStarted) return; // Only deselect if selection is in this sortable\n\n            if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable\n\n            if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return; // Only deselect if left click\n\n            if (evt && evt.button !== 0) return;\n\n            while (multiDragElements.length) {\n                var el = multiDragElements[0];\n                toggleClass(el, this.options.selectedClass, false);\n                multiDragElements.shift();\n                dispatchEvent({\n                    sortable: this.sortable,\n                    rootEl: this.sortable.el,\n                    name: 'deselect',\n                    targetEl: el,\n                    originalEvent: evt\n                });\n            }\n        },\n        _checkKeyDown: function _checkKeyDown(evt) {\n            if (evt.key === this.options.multiDragKey) {\n                this.multiDragKeyDown = true;\n            }\n        },\n        _checkKeyUp: function _checkKeyUp(evt) {\n            if (evt.key === this.options.multiDragKey) {\n                this.multiDragKeyDown = false;\n            }\n        }\n    };\n    return _extends(MultiDrag, {\n        // Static methods & properties\n        pluginName: 'multiDrag',\n        utils: {\n            /**\n             * Selects the provided multi-drag item\n             * @param  {HTMLElement} el    The element to be selected\n             */\n            select: function select(el) {\n                var sortable = el.parentNode[expando];\n                if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n\n                if (multiDragSortable && multiDragSortable !== sortable) {\n                    multiDragSortable.multiDrag._deselectMultiDrag();\n\n                    multiDragSortable = sortable;\n                }\n\n                toggleClass(el, sortable.options.selectedClass, true);\n                multiDragElements.push(el);\n            },\n\n            /**\n             * Deselects the provided multi-drag item\n             * @param  {HTMLElement} el    The element to be deselected\n             */\n            deselect: function deselect(el) {\n                var sortable = el.parentNode[expando],\n                    index = multiDragElements.indexOf(el);\n                if (!sortable || !sortable.options.multiDrag || !~index) return;\n                toggleClass(el, sortable.options.selectedClass, false);\n                multiDragElements.splice(index, 1);\n            }\n        },\n        eventProperties: function eventProperties() {\n            var _this3 = this;\n\n            var oldIndicies = [],\n                newIndicies = [];\n            multiDragElements.forEach(function (multiDragElement) {\n                oldIndicies.push({\n                    multiDragElement: multiDragElement,\n                    index: multiDragElement.sortableIndex\n                }); // multiDragElements will already be sorted if folding\n\n                var newIndex;\n\n                if (folding && multiDragElement !== dragEl$1) {\n                    newIndex = -1;\n                } else if (folding) {\n                    newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\n                } else {\n                    newIndex = index(multiDragElement);\n                }\n\n                newIndicies.push({\n                    multiDragElement: multiDragElement,\n                    index: newIndex\n                });\n            });\n            return {\n                items: _toConsumableArray(multiDragElements),\n                clones: [].concat(multiDragClones),\n                oldIndicies: oldIndicies,\n                newIndicies: newIndicies\n            };\n        },\n        optionListeners: {\n            multiDragKey: function multiDragKey(key) {\n                key = key.toLowerCase();\n\n                if (key === 'ctrl') {\n                    key = 'Control';\n                } else if (key.length > 1) {\n                    key = key.charAt(0).toUpperCase() + key.substr(1);\n                }\n\n                return key;\n            }\n        }\n    });\n}\n\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n    multiDragElements.forEach(function (multiDragElement, i) {\n        var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\n\n        if (target) {\n            rootEl.insertBefore(multiDragElement, target);\n        } else {\n            rootEl.appendChild(multiDragElement);\n        }\n    });\n}\n/**\n * Insert multi-drag clones\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\n * @param  {HTMLElement} rootEl\n */\n\n\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n    multiDragClones.forEach(function (clone, i) {\n        var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n\n        if (target) {\n            rootEl.insertBefore(clone, target);\n        } else {\n            rootEl.appendChild(clone);\n        }\n    });\n}\n\nfunction removeMultiDragElements() {\n    multiDragElements.forEach(function (multiDragElement) {\n        if (multiDragElement === dragEl$1) return;\n        multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\n    });\n}\n\nSortable.mount(new AutoScrollPlugin());\nSortable.mount(Remove, Revert);\n\nSortable.mount(new SwapPlugin());\nSortable.mount(new MultiDragPlugin());\n\nexport default Sortable;\n"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_typeof","obj","Symbol","iterator","constructor","prototype","value","configurable","writable","_extends","assign","hasOwnProperty","call","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","from","_iterableToArray","o","minLen","n","toString","slice","name","test","_unsupportedIterableToArray","TypeError","_nonIterableSpread","len","arr2","userAgent","pattern","window","navigator","match","IE11OrLess","Edge","FireFox","Safari","IOS","ChromeForAndroid","captureMode","capture","passive","on","el","event","fn","addEventListener","off","removeEventListener","matches","selector","substring","msMatchesSelector","webkitMatchesSelector","_","getParentOrHost","host","document","nodeType","parentNode","closest","ctx","includeCTX","_throttleTimeout","R_SPACE","toggleClass","state","classList","className","replace","css","prop","val","style","defaultView","getComputedStyle","currentStyle","matrix","selfOnly","appliedTransforms","transform","matrixFn","DOMMatrix","WebKitCSSMatrix","CSSMatrix","MSCSSMatrix","find","tagName","list","getElementsByTagName","getWindowScrollingElement","scrollingElement","documentElement","getRect","relativeToContainingBlock","relativeToNonStaticParent","undoScale","container","getBoundingClientRect","elRect","top","left","bottom","right","height","width","innerHeight","innerWidth","containerRect","parseInt","elMatrix","scaleX","a","scaleY","d","isScrolledPast","elSide","parentSide","parent","getParentAutoScrollElement","elSideVal","parentSideVal","getChild","childNum","options","includeDragEl","currentChild","children","display","Sortable","ghost","dragged","draggable","lastChild","last","lastElementChild","previousElementSibling","index","nodeName","toUpperCase","clone","getRelativeScrollOffset","offsetLeft","offsetTop","winScroller","scrollLeft","scrollTop","includeSelf","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","overflowX","overflowY","body","isRectEqual","rect1","rect2","Math","round","throttle","callback","ms","args","_this","setTimeout","scrollBy","x","y","Polymer","$","jQuery","Zepto","dom","cloneNode","setRect","rect","unsetRect","expando","Date","getTime","AnimationStateManager","animationCallbackId","animationStates","captureAnimationState","animation","child","fromRect","thisAnimationDuration","childMatrix","f","e","addAnimationState","removeAnimationState","splice","Number","indexOfObject","animateAll","clearTimeout","animating","animationTime","time","toRect","prevFromRect","prevToRect","animatingRect","targetMatrix","sqrt","pow","calculateRealTime","animate","max","animationResetTimer","currentRect","duration","translateX","translateY","animatingX","animatingY","forRepaintDummy","offsetWidth","repaint","easing","animated","plugins","defaults","initializeByDefault","PluginManager","mount","plugin","option","p","pluginName","concat","pluginEvent","eventName","sortable","evt","eventCanceled","cancel","eventNameGlobal","initializePlugins","initialized","modified","modifyOption","getEventProperties","eventProperties","modifiedValue","optionListeners","dispatchEvent","_ref","rootEl","targetEl","cloneEl","toEl","fromEl","oldIndex","newIndex","oldDraggableIndex","newDraggableIndex","originalEvent","putSortable","extraEventProperties","onName","charAt","substr","CustomEvent","createEvent","initEvent","bubbles","cancelable","to","item","pullMode","lastPutMode","undefined","allEventProperties","_excluded","data","bind","dragEl","parentEl","ghostEl","nextEl","lastDownEl","cloneHidden","dragStarted","moved","activeSortable","active","hideGhostForTarget","_hideGhostForTarget","unhideGhostForTarget","_unhideGhostForTarget","cloneNowHidden","cloneNowShown","dispatchSortableEvent","_dispatchEvent","info","activeGroup","tapEvt","touchEvt","lastDx","lastDy","tapDistanceLeft","tapDistanceTop","lastTarget","lastDirection","targetMoveDistance","ghostRelativeParent","awaitingDragStarted","ignoreNextClick","sortables","pastFirstInvertThresh","isCircumstantialInvert","ghostRelativeParentInitialScroll","_silent","savedInputChecked","documentExists","PositionGhostAbsolutely","CSSFloatProperty","supportDraggable","createElement","supportCssPointerEvents","cssText","pointerEvents","_detectDirection","elCSS","elWidth","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","child1","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginLeft","marginRight","secondChildWidth","flexDirection","gridTemplateColumns","split","touchingSideChild2","clear","_prepareGroup","toFn","pull","sameGroup","group","otherGroup","join","originalGroup","checkPull","checkPut","put","revertClone","preventDefault","stopPropagation","stopImmediatePropagation","nearestEmptyInsertDetectEvent","touches","nearest","clientX","clientY","some","threshold","emptyInsertThreshold","insideHorizontally","insideVertically","ret","_onDragOver","_checkOutsideTargetEl","_isOutsideThisEl","sort","disabled","store","handle","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","preventOnFilter","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","nativeDraggable","_onTapStart","get","_onMove","dragRect","targetRect","willInsertAfter","retVal","onMoveFn","onMove","draggedRect","related","relatedRect","_disableDraggable","_unsilent","_generateId","str","src","href","sum","charCodeAt","_nextTick","_cancelNextTick","id","contains","_getDirection","type","touch","pointerType","originalTarget","shadowRoot","path","composedPath","root","inputs","idx","checked","_saveInputCheckedState","button","isContentEditable","criteria","trim","_prepareDragStart","dragStartFn","ownerDocument","nextSibling","_lastX","_lastY","_onDrop","_disableDelayedDragEvents","_triggerDragStart","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","abs","floor","_onTouchMove","_onDragStart","selection","empty","getSelection","removeAllRanges","err","_dragStarted","fallback","_appendGhost","_nulling","_emulateDragOver","elementFromPoint","ghostMatrix","relativeScrollOffset","dx","dy","b","c","cssMatrix","appendChild","removeAttribute","_hideClone","cloneId","insertBefore","_loopId","setInterval","effectAllowed","_dragStartId","revert","vertical","isOwner","canSort","fromSortable","completedFired","dragOverEvent","_ignoreWhileAnimating","completed","elLastChild","spacer","_ghostIsLast","changed","_ghostIsFirst","firstChild","targetBeforeFirstSwap","sibling","differentLevel","differentRowCol","dragElS1Opp","dragElS2Opp","dragElOppLength","targetS1Opp","targetS2Opp","targetOppLength","_dragElInRowColumn","side1","scrolledPastTop","scrollBefore","isLastTarget","mouseOnAxis","targetLength","targetS1","targetS2","invert","_getInsertDirection","_getSwapDirection","dragIndex","nextElementSibling","after","moveVector","extra","axis","insertion","_showClone","_offMoveEvents","_offUpEvents","clearInterval","removeChild","save","handleEvent","dropEffect","_globalDragOver","toArray","order","getAttribute","useAnimation","items","set","destroy","querySelectorAll","utils","is","extend","dst","nextTick","cancelNextTick","detectDirection","element","_len","_key","create","version","scrollEl","scrollRootEl","lastAutoScrollX","lastAutoScrollY","touchEvt$1","pointerElemChangedInterval","autoScrolls","scrolling","clearAutoScrolls","autoScroll","pid","clearPointerElemChangedInterval","lastSwapEl","isFallback","scroll","scrollCustomFn","sens","scrollSensitivity","speed","scrollSpeed","scrollThisInstance","scrollFn","layersOut","currentParent","canScrollX","canScrollY","scrollPosX","scrollPosY","vx","vy","layer","scrollOffsetY","scrollOffsetX","bubbleScroll","drop","toSortable","changedTouches","onSpill","Revert","Remove","startIndex","dragStart","_ref2","_ref3","_ref4","parentSortable","lastMultiDragSelect","multiDragSortable","dragEl$1","clonesFromRect","clonesHidden","multiDragElements","multiDragClones","initialFolding","folding","insertMultiDragClones","elementsInserted","sortableIndex","removeMultiDragElements","multiDragElement","AutoScroll","forceAutoScrollFallback","_handleAutoScroll","_handleFallbackAutoScroll","dragOverCompleted","dragOverBubble","nulling","ogElemScroller","newElem","Swap","swapClass","dragOverValid","swap","prevSwapEl","n1","n2","i1","i2","p1","p2","isEqualNode","swapNodes","swapItem","MultiDrag","avoidImplicitDeselect","_deselectMultiDrag","_checkKeyDown","_checkKeyUp","selectedClass","multiDragKey","multiDragKeyDown","isMultiDrag","delayStartGlobal","delayEnded","setupClone","showClone","hideClone","_ref5","dragStartGlobal","_ref6","multiDrag","_ref7","_this2","dragOver","_ref8","_ref9","clonesInserted","insertMultiDragElements","_ref10","dragRectAbsolute","clonesHiddenBefore","dragOverAnimationCapture","_ref11","dragMatrix","dragOverAnimationComplete","_ref12","shiftKey","lastIndex","currentIndex","multiDragIndex","update","nullingGlobal","destroyGlobal","shift","select","deselect","_this3","oldIndicies","newIndicies","clones","toLowerCase"],"mappings":"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"}