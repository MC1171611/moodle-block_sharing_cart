{"version":3,"file":"element.min.js","sources":["../../../src/app/block/element.js"],"sourcesContent":["import Sortable from '../../lib/sortablejs';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport {get_string, get_strings} from \"core/str\";\nimport Ajax from \"core/ajax\";\nimport Notification from \"core/notification\";\n\nexport default class BlockElement {\n    /**\n     * @type {BaseFactory}\n     */\n    #baseFactory;\n\n    /**\n     * @type {HTMLElement}\n     */\n    #element;\n\n    /**\n     * @type {CourseElement}\n     */\n    #course;\n\n    /**\n     * @type {QueueElement}\n     */\n    #queue;\n\n    /**\n     * @type {ItemElement[]}\n     */\n    #items = [];\n\n    /**\n     * @type {Sortable|NULL}\n     */\n    #sortable = null;\n\n    /**\n     * @type {ItemElement|NULL}\n     */\n    #clipboardItem = null;\n\n    /**\n     * @type {Boolean}\n     */\n    #canBackupUserdata = false;\n\n    /**\n     * @type {Boolean}\n     */\n    #canAnonymizeUserdata = false;\n\n    /**\n     * @type {Boolean}\n     */\n    #showSharingCartBasket = false;\n\n    /**\n     * @type {Number|null}\n     */\n    #draggedCourseModuleId = null;\n\n    /**\n     * @type {Number|null}\n     */\n    #draggedSectionId = null;\n\n    /**\n     * @type {boolean}\n     */\n    #bulkDeleteEnabled = false;\n\n    /**\n     * @param {BaseFactory} baseFactory\n     * @param {HTMLElement} element\n     * @param {Boolean} canBackupUserdata\n     * @param {Boolean} canAnonymizeUserdata\n     * @param {Boolean} showSharingCartBasket\n     */\n    constructor(baseFactory, element, canBackupUserdata, canAnonymizeUserdata, showSharingCartBasket) {\n        this.#baseFactory = baseFactory;\n        this.#element = element;\n        this.#canBackupUserdata = canBackupUserdata;\n        this.#canAnonymizeUserdata = canAnonymizeUserdata;\n        this.#showSharingCartBasket = showSharingCartBasket;\n    }\n\n    /**\n     * @return {{course: CourseElement, block: BlockElement, queue: QueueElement}}\n     */\n    addEventListeners() {\n        this.setupCourse();\n        this.setupQueue();\n        this.setupItems();\n        this.setupDragAndDrop();\n        this.setupBulkDelete();\n\n        return {course: this.#course, queue: this.#queue, block: this};\n    }\n\n    setupCourse() {\n        const course = document.querySelector('.course-content');\n\n        this.#course = this.#baseFactory.block().course().element(this, course);\n    }\n\n    setupQueue() {\n        const queue = document.querySelector('.sharing_cart_queue');\n\n        this.#queue = this.#baseFactory.block().queue().element(this, queue);\n    }\n\n    async setupItems() {\n        const items = this.#element.querySelectorAll('.sharing_cart_item');\n\n        for (const element of items) {\n            await this.setupItem(element);\n        }\n\n        this.#sortable = new Sortable(this.#element.querySelector('.sharing_cart_items'), {\n            dataIdAttr: 'data-itemid',\n            onUpdate: () => {\n                Ajax.call([{\n                    methodname: 'block_sharing_cart_reorder_sharing_cart_items',\n                    args: {\n                        item_ids: this.#sortable.toArray().filter((id) => !isNaN(id)),\n                    },\n                    fail: (data) => {\n                        Notification.exception(data);\n                    }\n                }]);\n            }\n        });\n    }\n\n    setupDragAndDrop() {\n        const dropZone = this.#element;\n\n        dropZone.addEventListener('dragover', (e) => {\n            if (!this.#draggedSectionId && !this.#draggedCourseModuleId) {\n                return;\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n        });\n        dropZone.addEventListener('dragleave', (e) => {\n            if (!this.#draggedSectionId && !this.#draggedCourseModuleId) {\n                return;\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n        });\n        dropZone.addEventListener('drop', async (e) => {\n            if (!this.#draggedSectionId && !this.#draggedCourseModuleId) {\n                return;\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            if (this.#draggedSectionId) {\n                await this.addSectionBackupToSharingCart(this.#draggedSectionId);\n            } else if (this.#draggedCourseModuleId) {\n                await this.addCourseModuleBackupToSharingCart(this.#draggedCourseModuleId);\n            }\n        });\n    }\n\n    setupBulkDelete() {\n        const enableBulkDeleteButton = this.#element.querySelector('#block_sharing_cart_bulk_delete');\n        const disableBulkDeleteButton = this.#element.querySelector('#block_sharing_cart_cancel_bulk_delete');\n        const bulkDeleteButton = this.#element.querySelector('#block_sharing_cart_bulk_delete_confirm');\n\n        const selectAllContainer = this.#element.querySelector('#select_all_container');\n        const selectAllCheckbox = this.#element.querySelector('#select_all_box');\n\n        selectAllCheckbox.addEventListener('click', async () => {\n            const itemCheckboxes = this.getItemCheckboxes();\n            const allSelected = Array.from(itemCheckboxes).every(checkbox => checkbox.checked);\n            itemCheckboxes.forEach(checkbox => {\n                checkbox.checked = !allSelected;\n            });\n            itemCheckboxes.forEach(checkbox => checkbox.addEventListener('change', async () => {\n                this.updateSelectAllState();\n            }));\n\n            this.updateSelectAllState();\n            this.updateBulkDeleteButtonState();\n        });\n\n        enableBulkDeleteButton.addEventListener('click', () => {\n            if (this.#items.length === 0) {\n                return;\n            }\n\n            this.#bulkDeleteEnabled = true;\n\n            enableBulkDeleteButton.classList.add('d-none');\n            disableBulkDeleteButton.classList.remove('d-none');\n\n            selectAllContainer.classList.remove('d-none');\n            bulkDeleteButton.classList.remove('d-none');\n\n            this.getItemCheckboxes().forEach((checkbox) => {\n                checkbox.classList.remove('d-none');\n                checkbox.checked = false;\n            });\n        });\n\n        disableBulkDeleteButton.addEventListener('click', () => {\n            disableBulkDeleteButton.classList.add('d-none');\n            bulkDeleteButton.classList.add('d-none');\n            bulkDeleteButton.disabled = true;\n            enableBulkDeleteButton.classList.remove('d-none');\n            selectAllContainer.classList.add('d-none');\n\n            this.getItemCheckboxes().forEach((checkbox) => {\n                checkbox.classList.add('d-none');\n                checkbox.checked = false;\n            });\n        });\n\n        bulkDeleteButton.addEventListener('click', async () => {\n            if (bulkDeleteButton.disabled) {\n                return;\n            }\n\n            const itemIds = [];\n            this.getItemCheckboxes().forEach((checkbox) => {\n                if (!checkbox.checked) {\n                    return;\n                }\n\n                itemIds.push(checkbox.value);\n            });\n\n            await this.confirmDeleteItems(itemIds);\n        });\n    }\n\n    /**\n     * @param {HTMLElement} element\n     */\n    async setupItem(element) {\n        const itemElement = this.#baseFactory.block().item().element(this, element);\n\n        if (itemElement.getStatus() !== '0' && this.isBulkDeleteEnabled()) {\n            const checkbox = element.querySelector('input[data-action=\"bulk_select\"][type=\"checkbox\"]');\n            checkbox?.classList?.remove('d-none');\n        }\n\n        this.#element.querySelector('.no-items').classList.add('d-none');\n\n        const existingItemIndex = this.#items.findIndex((i) => i.getItemId() === itemElement.getItemId());\n        if (existingItemIndex !== -1) {\n            this.#items[existingItemIndex] = itemElement;\n        } else {\n            this.#items.push(itemElement);\n        }\n\n        this.updateBulkDeleteButtonState();\n        this.updateSelectAllState();\n    }\n\n    getItemCheckboxes() {\n        const checkboxSelector = '.sharing_cart_item:not([data-status=\"0\"]) input[data-action=\"bulk_select\"][type=\"checkbox\"]';\n        return this.#element.querySelectorAll(checkboxSelector);\n    }\n\n    updateBulkDeleteButtonState() {\n        const bulkDeleteButton = this.#element.querySelector('#block_sharing_cart_bulk_delete_confirm');\n        bulkDeleteButton.disabled = !Array.from(this.getItemCheckboxes()).some(checkbox => checkbox.checked);\n    }\n\n    updateSelectAllState() {\n        const selectAllCheckbox = this.#element.querySelector('#select_all_box');\n        const selectAllLabel = this.#element.querySelector('#select_all_label');\n\n        const itemCheckboxes = this.getItemCheckboxes();\n        const allSelected = Array.from(itemCheckboxes).every(checkbox => checkbox.checked);\n        const someSelected = Array.from(itemCheckboxes).some(checkbox => checkbox.checked);\n\n        const strPromise = allSelected ?\n            get_string('deselect_all', 'block_sharing_cart') :\n            get_string('select_all', 'block_sharing_cart');\n        strPromise.then((str) => {\n            selectAllLabel.textContent = str;\n        });\n\n        selectAllCheckbox.checked = allSelected;\n        selectAllCheckbox.indeterminate = !allSelected && someSelected;\n    }\n\n    isBulkDeleteEnabled() {\n        return this.#bulkDeleteEnabled;\n    }\n\n    /**\n     * @param {ItemElement} item\n     */\n    async setClipboard(item) {\n        this.#clipboardItem = item;\n\n        await this.#course.setClipboard(item);\n    }\n\n    clearClipboard() {\n        this.#clipboardItem = null;\n    }\n\n    /**\n     * @param {Number|null} id\n     */\n    setDraggedSectionId(id) {\n        this.#draggedSectionId = id;\n    }\n\n    /**\n     * @param {Number|null} id\n     */\n    setDraggedCourseModuleId(id) {\n        this.#draggedCourseModuleId = id;\n    }\n\n    /**\n     * @param {ItemElement} item\n     */\n    async removeItemElement(item) {\n        const childItems = item.getItemChildrenRecursively();\n        childItems.forEach((childItem) => {\n            const index = this.#items.findIndex((i) => i.getItemId() === Number.parseInt(childItem.dataset.itemid));\n            if (index === -1) {\n                return;\n            }\n\n            if (this.#items[index].getItemId() === this.#clipboardItem?.getItemId()) {\n                this.#course.clearClipboard();\n            }\n\n            this.#items.splice(index, 1);\n            childItem.remove();\n        });\n\n        const index = this.#items.findIndex((i) => i.getItemId() === item.getItemId());\n        if (this.#items[index].getItemId() === this.#clipboardItem?.getItemId()) {\n            this.#course.clearClipboard();\n        }\n\n        this.#items.splice(index, 1);\n        item.remove();\n\n        if (this.#items.length === 0) {\n            this.#element.querySelector('.no-items').classList.remove('d-none');\n        }\n    }\n\n    /**\n     * @param {ItemElement} item\n     */\n    deleteItem(item) {\n        Ajax.call([{\n            methodname: 'block_sharing_cart_delete_item_from_sharing_cart',\n            args: {\n                item_id: item.getItemId(),\n            },\n            done: async (deleted) => {\n                if (deleted) {\n                    await this.removeItemElement(item);\n                    this.updateSelectAllState();\n                } else {\n                    await Notification.alert('Failed to delete item');\n                }\n            },\n            fail: (data) => {\n                Notification.exception(data);\n            }\n        }]);\n    }\n\n    /**\n     * @param {Array<Number>} itemIds\n     */\n    deleteItems(itemIds) {\n        itemIds = itemIds.map((id) => Number.parseInt(id));\n\n        Ajax.call([{\n            methodname: 'block_sharing_cart_delete_items_from_sharing_cart',\n            args: {\n                item_ids: itemIds,\n            },\n            done: async (deletedItemIds) => {\n                const items = this.#items.filter((i) => itemIds.includes(i.getItemId()));\n                for (const item of items) {\n                    const deleted = deletedItemIds.includes(item.getItemId());\n                    if (!deleted) {\n                        Notification.alert('Failed to delete item: \"' + item.getItemName() + '\"');\n                        continue;\n                    }\n\n                    await this.removeItemElement(item);\n                }\n                this.updateSelectAllState();\n\n                document.getElementById('block_sharing_cart_bulk_delete_confirm').disabled = true;\n            },\n            fail: (data) => {\n                Notification.exception(data);\n            }\n        }]);\n    }\n\n    getElement() {\n        return this.#element;\n    }\n\n    /**\n     * @param {String} itemName\n     * @param {CallableFunction} onSave\n     * @return {Promise<Modal>}\n     */\n    async createBackupItemToSharingCartModal(itemName, onSave) {\n        const strings = await get_strings([\n            {\n                key: 'backup_item',\n                component: 'block_sharing_cart',\n            },\n            {\n                key: 'into_sharing_cart',\n                component: 'block_sharing_cart',\n            },\n            {\n                key: 'backup',\n                component: 'block_sharing_cart',\n            },\n            {\n                key: 'cancel',\n                component: 'core',\n            }\n        ]);\n\n        const {html, js} = await this.#baseFactory.moodle().template().renderTemplate(\n            'block_sharing_cart/modal/backup_to_sharing_cart_modal_body',\n            {\n                show_user_data_backup: this.#canBackupUserdata,\n                show_anonymize_user_data: this.#canBackupUserdata && this.#canAnonymizeUserdata,\n            }\n        );\n\n        /**\n         * @type {Modal}\n         */\n        const modal = await ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: strings[0] + ': \"' + itemName.slice(0, 50).trim() + '\" ' + strings[1],\n            body: html,\n            buttons: {\n                save: strings[2],\n                cancel: strings[3],\n            },\n            removeOnClose: true,\n        });\n        modal.getRoot().on(ModalEvents.shown, () => this.#baseFactory.moodle().template().runTemplateJS(js));\n        modal.getRoot().on(ModalEvents.save, () => {\n            const modalUserdataCheckbox = document.getElementById('modal-userdata-checkbox');\n            const modalAnonymizeCheckbox = document.getElementById('modal-anonymize-checkbox');\n\n            onSave({\n                users: modalUserdataCheckbox?.checked ?? false,\n                anonymize: modalAnonymizeCheckbox?.checked ?? false\n            });\n        });\n\n        return modal;\n    }\n\n    /**\n     * @param {Number} sectionId\n     */\n    async addSectionBackupToSharingCart(sectionId) {\n        const sectionName = this.#course.getSectionName(sectionId);\n\n        const cms = this.#course.getSectionCourseModules(sectionId);\n\n        if (cms.length === 0) {\n            const strings = await get_strings([\n                {\n                    key: 'no_course_modules_in_section',\n                    component: 'block_sharing_cart',\n                },\n                {\n                    key: 'no_course_modules_in_section_description',\n                    component: 'block_sharing_cart',\n                },\n            ]);\n\n            await Notification.alert(strings[0], strings[1]);\n\n            return;\n        }\n\n        const modal = await this.createBackupItemToSharingCartModal(sectionName, (settings) => {\n            Ajax.call([{\n                methodname: 'block_sharing_cart_backup_section_into_sharing_cart',\n                args: {\n                    section_id: sectionId,\n                    settings: settings\n                },\n                done: async (data) => {\n                    await this.renderItem(data);\n                },\n                fail: (data) => {\n                    Notification.exception(data);\n                }\n            }]);\n        });\n\n        await modal.show();\n    }\n\n    /**\n     * @param {Number} courseModuleId\n     */\n    async addCourseModuleBackupToSharingCart(courseModuleId) {\n        const courseModuleName = this.#course.getCourseModuleName(courseModuleId);\n\n        const modal = await this.createBackupItemToSharingCartModal(courseModuleName, (settings) => {\n            Ajax.call([{\n                methodname: 'block_sharing_cart_backup_course_module_into_sharing_cart',\n                args: {\n                    course_module_id: courseModuleId,\n                    settings: settings\n                },\n                done: async (data) => {\n                    await this.renderItem(data);\n                },\n                fail: (data) => {\n                    Notification.exception(data);\n                }\n            }]);\n        });\n        await modal.show();\n    }\n\n    /**\n     * @param {Object} item\n     */\n    async renderItem(item) {\n        const existingItemIndex = this.#items.findIndex((i) => i.getItemId() === item.id);\n        const existingItem = this.#items[existingItemIndex] ?? false;\n        const getOldElement = () => {\n            return this.#element.querySelector('.sharing_cart_items .sharing_cart_item[data-itemid=\"' + item.id + '\"]');\n        };\n        const oldElement = getOldElement();\n        if (existingItem && oldElement) {\n            const element = await this.#baseFactory.moodle().template().createElementFromFragment(\n                'block_sharing_cart',\n                'item',\n                1,\n                {\n                    item_id: item.id,\n                }\n            );\n\n            // Early exit if the element has been removed from the DOM in between rendering and checking earlier.\n            if (getOldElement() !== oldElement) {\n                return;\n            }\n\n            this.#element.querySelector('.sharing_cart_items').replaceChild(element, oldElement);\n            this.#items[existingItemIndex] = this.#baseFactory.block().item().element(this, element);\n\n            await this.setupItem(element);\n            for (const subItem of element.querySelectorAll('.sharing_cart_item')) {\n                await this.setupItem(subItem);\n            }\n\n            return;\n        }\n\n        const element = await this.#baseFactory.moodle().template().createElementFromTemplate(\n            'block_sharing_cart/block/item',\n            {\n                id: item.id,\n                name: item.name,\n                type: item.type,\n                status: 0,\n                old_instance_id: item.old_instance_id,\n                status_awaiting: true,\n                has_run_now: true,\n                task_id: item.task_id ?? null,\n                status_finished: false,\n                status_failed: false,\n                is_module: item.type !== 'section',\n                is_section: item.type === 'section',\n                is_root: true,\n            }\n        );\n        this.#element.querySelector('.sharing_cart_items').prepend(element);\n\n        await this.setupItem(element);\n    }\n\n    /**\n     * @param {ItemElement} item\n     * @param {Number} sectionId\n     * @param {HTMLElement} modal\n     */\n    importItem(item, sectionId, modal) {\n        this.#course.clearClipboard();\n\n        const courseModuleIds = [];\n        modal.querySelectorAll('input[type=\"checkbox\"][data-type=\"coursemodule\"]:checked').forEach((checkbox) => {\n            courseModuleIds.push(checkbox.dataset.id);\n        });\n\n        if (item.isSection() && courseModuleIds.length === 0) {\n            modal.querySelectorAll('.form-check-input').forEach(async (item) => {\n                item.setCustomValidity(\n                    await get_string('atleast_one_course_module_must_be_included', 'block_sharing_cart')\n                );\n                item.reportValidity();\n            });\n            return false;\n        }\n\n        if (item.isModule()) {\n            courseModuleIds.push(item.getItemOldInstanceId());\n        }\n\n        Ajax.call([{\n            methodname: 'block_sharing_cart_restore_item_from_sharing_cart_into_section',\n            args: {\n                item_id: item.getItemId(),\n                section_id: sectionId,\n                course_modules_to_include: courseModuleIds,\n            },\n            done: async (success) => {\n                if (success) {\n                    await this.#queue.loadQueue(true);\n                }\n            },\n            fail: (data) => {\n                Notification.exception(data);\n            }\n        }]);\n    }\n\n    /**\n     * @param {ItemElement} item\n     * @param {Number} sectionId\n     * @param {Event} e\n     */\n    async confirmImportBackupFromSharingCart(item, sectionId, e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const strings = await get_strings([\n            {\n                key: 'copy_item',\n                component: 'block_sharing_cart',\n            },\n            {\n                key: 'into_section',\n                component: 'block_sharing_cart',\n            },\n            {\n                key: 'import',\n                component: 'core',\n            },\n            {\n                key: 'cancel',\n                component: 'core',\n            }\n        ]);\n\n        const sectionName = this.#course.getSectionName(sectionId);\n        const divElement = document.getElementById('block_sharing_cart');\n        const pageContextId = divElement.getAttribute('data-contextid');\n\n        const {html, js} = await this.#baseFactory.moodle().template().renderFragment(\n            'block_sharing_cart',\n            'item_restore_form',\n            pageContextId,\n            {\n                item_id: item.getItemId()\n            }\n        );\n\n        const modal = await ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: strings[0] + ': ' +\n                '\"' + item.getItemName().slice(0, 50).trim() + '\"' +\n                ' ' + strings[1] + ': ' +\n                '\"' + sectionName.slice(0, 50).trim() + '\"',\n            body: html,\n            buttons: {\n                save: strings[2],\n                cancel: strings[3],\n            },\n            removeOnClose: true,\n        });\n        modal.getRoot().on(ModalEvents.shown, () => this.#baseFactory.moodle().template().runTemplateJS(js));\n        modal.getRoot().on(ModalEvents.save, this.importItem.bind(this, item, sectionId, modal.getRoot()[0]));\n        await modal.show();\n    }\n\n    /**\n     * @param {Array<Number>} itemIds\n     */\n    async confirmDeleteItems(itemIds) {\n        const strings = await get_strings([\n            {\n                key: 'delete_items',\n                component: 'block_sharing_cart',\n            },\n            {\n                key: 'confirm_delete_items',\n                component: 'block_sharing_cart',\n            },\n            {\n                key: 'delete',\n                component: 'core',\n            },\n            {\n                key: 'cancel',\n                component: 'core',\n            }\n        ]);\n\n        const modal = await ModalFactory.create({\n            type: ModalFactory.types.DELETE_CANCEL,\n            title: strings[0],\n            body: strings[1],\n            buttons: {\n                delete: strings[2],\n                cancel: strings[3],\n            },\n            removeOnClose: true,\n        });\n\n        modal.getRoot().on(ModalEvents.delete, this.deleteItems.bind(this, itemIds));\n        await modal.show();\n    }\n}\n"],"names":["_interopRequireDefault","e","__esModule","default","_sortablejs","_modal_factory","_modal_events","_ajax","_notification","_exports","baseFactory","element","course","queue","items","sortable","clipboardItem","canBackupUserdata","canAnonymizeUserdata","showSharingCartBasket","draggedCourseModuleId","draggedSectionId","bulkDeleteEnabled","constructor","this","addEventListeners","setupCourse","setupQueue","setupItems","setupDragAndDrop","setupBulkDelete","block","document","querySelector","querySelectorAll","setupItem","Sortable","dataIdAttr","onUpdate","Ajax","call","methodname","args","item_ids","toArray","filter","id","isNaN","fail","data","Notification","exception","dropZone","addEventListener","preventDefault","stopPropagation","async","addSectionBackupToSharingCart","addCourseModuleBackupToSharingCart","enableBulkDeleteButton","disableBulkDeleteButton","bulkDeleteButton","selectAllContainer","itemCheckboxes","getItemCheckboxes","allSelected","Array","from","every","checkbox","checked","forEach","updateSelectAllState","updateBulkDeleteButtonState","length","classList","add","remove","disabled","itemIds","push","value","confirmDeleteItems","itemElement","item","getStatus","isBulkDeleteEnabled","existingItemIndex","findIndex","i","getItemId","some","selectAllCheckbox","selectAllLabel","someSelected","get_string","then","str","textContent","indeterminate","setClipboard","clearClipboard","setDraggedSectionId","setDraggedCourseModuleId","removeItemElement","getItemChildrenRecursively","childItem","index","Number","parseInt","dataset","itemid","splice","deleteItem","item_id","done","deleted","alert","deleteItems","map","includes","deletedItemIds","getItemName","getElementById","getElement","createBackupItemToSharingCartModal","itemName","onSave","strings","get_strings","key","component","html","js","moodle","template","renderTemplate","show_user_data_backup","show_anonymize_user_data","modal","ModalFactory","create","type","types","SAVE_CANCEL","title","slice","trim","body","buttons","save","cancel","removeOnClose","getRoot","on","ModalEvents","shown","runTemplateJS","modalUserdataCheckbox","modalAnonymizeCheckbox","users","anonymize","sectionId","sectionName","getSectionName","getSectionCourseModules","settings","section_id","renderItem","show","courseModuleId","courseModuleName","getCourseModuleName","course_module_id","existingItem","getOldElement","oldElement","createElementFromFragment","replaceChild","subItem","createElementFromTemplate","name","status","old_instance_id","status_awaiting","has_run_now","task_id","status_finished","status_failed","is_module","is_section","is_root","prepend","importItem","courseModuleIds","isSection","setCustomValidity","reportValidity","isModule","getItemOldInstanceId","course_modules_to_include","success","loadQueue","confirmImportBackupFromSharingCart","pageContextId","getAttribute","renderFragment","bind","DELETE_CANCEL","delete"],"mappings":"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"}