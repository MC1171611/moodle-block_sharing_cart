{"version":3,"file":"element.min.js","sources":["../../../../src/app/block/item/element.js"],"sourcesContent":["import ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Notification from \"core/notification\";\nimport {get_strings} from \"core/str\";\nimport Ajax from \"core/ajax\";\n\nexport default class ItemElement {\n    /**\n     * @type {BaseFactory}\n     */\n    #baseFactory;\n\n    /**\n     * @type {BlockElement}\n     */\n    #blockElement;\n\n    /**\n     * @type {HTMLElement}\n     */\n    #element;\n\n    /**\n     * @param {BaseFactory} baseFactory\n     * @param {BlockElement} blockElement\n     * @param {HTMLElement} element\n     */\n    constructor(baseFactory, blockElement, element) {\n        this.#baseFactory = baseFactory;\n        this.#blockElement = blockElement;\n        this.#element = element;\n\n        if (this.#element.dataset.status === '0') {\n            this.#pollItem();\n        }\n\n        this.#addEventListeners();\n    }\n\n    #pollItem(currentTry = 0, retries = 10) {\n        currentTry += 1;\n\n        if (currentTry >= retries) {\n            return;\n        }\n\n        Ajax.call([{\n            methodname: 'block_sharing_cart_get_item_from_sharing_cart',\n            args: {\n                item_id: this.getItemId(),\n            },\n            done: async (item) => {\n                if (item.status === 0) {\n                    new Promise(\n                        (resolve) => {\n                            setTimeout(resolve, currentTry * 1000);\n                        }\n                    ).then(\n                        () => {\n                            this.#pollItem(currentTry, retries);\n                        }\n                    );\n\n                    return;\n                }\n\n                await this.#blockElement.renderItem(item);\n            },\n            fail: (data) => {\n                Notification.exception(data);\n            }\n        }]);\n    }\n\n    #addEventListeners() {\n        this.#element.querySelector('.info').addEventListener('click', this.toggleCollapseRecursively.bind(this));\n\n        const checkbox = this.#element.querySelector('input[data-action=\"bulk_select\"][type=\"checkbox\"]');\n        checkbox?.addEventListener('click', () => {\n            this.#blockElement.updateSelectAllState();\n            this.#blockElement.updateBulkDeleteButtonState();\n        });\n\n        const actionsContainer = this.#element.querySelector(':scope > .item-body .sharing_cart_item_actions');\n\n        actionsContainer?.querySelector('[data-action=\"delete\"]')?.addEventListener(\n            'click',\n            this.confirmDeleteItem.bind(this)\n        );\n        actionsContainer?.querySelector('[data-action=\"copy_to_course\"]')?.addEventListener(\n            'click',\n            this.copyItemToCourse.bind(this)\n        );\n        actionsContainer?.querySelector('[data-action=\"run_now\"]')?.addEventListener(\n            'click',\n            this.runNow.bind(this)\n        );\n    }\n\n    async copyItemToCourse(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        await this.#blockElement.setClipboard(this);\n    }\n\n    async runNow(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const currentTarget = e.currentTarget;\n        currentTarget.disabled = true;\n\n        Ajax.call([{\n            methodname: 'block_sharing_cart_run_task_now',\n            args: {\n                task_id: currentTarget?.dataset?.taskId ?? null,\n            },\n            done: async () => {\n                currentTarget.remove();\n                this.#pollItem();\n            },\n            fail: (data) => {\n                Notification.exception(data);\n                currentTarget.disabled = false;\n            }\n        }]);\n    }\n\n    async confirmDeleteItem(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const strings = await get_strings([\n            {\n                key: 'delete_item',\n                component: 'block_sharing_cart',\n            },\n            {\n                key: 'confirm_delete_item',\n                component: 'block_sharing_cart',\n            },\n            {\n                key: 'delete',\n                component: 'core',\n            },\n            {\n                key: 'cancel',\n                component: 'core',\n            }\n        ]);\n\n        const modal = await ModalFactory.create({\n            type: ModalFactory.types.DELETE_CANCEL,\n            title: strings[0] + ': \"' + this.getItemName().slice(0, 50).trim() + '\"',\n            body: strings[1],\n            buttons: {\n                delete: strings[2],\n                cancel: strings[3],\n            },\n            removeOnClose: true,\n        });\n        modal.getRoot().on(ModalEvents.delete, this.#blockElement.deleteItem.bind(this.#blockElement, this));\n        await modal.show();\n    }\n\n    /**\n     * @return {NodeListOf<HTMLElement>}\n     */\n    getItemChildrenRecursively() {\n        return this.#element.querySelectorAll('.sharing_cart_item');\n    }\n\n    /**\n     * @return {HTMLElement}\n     */\n    getItemElement() {\n        return this.#element;\n    }\n\n    getStatus() {\n        return this.#element.dataset.status;\n    }\n\n    /**\n     * @return {String}\n     */\n    getItemName() {\n        return this.#element.querySelector('.name').innerText;\n    }\n\n    /**\n     * @return {Number}\n     */\n    getItemId() {\n        return Number.parseInt(this.#element.dataset.itemid);\n    }\n\n    /**\n     * @return {Number}\n     */\n    getItemOldInstanceId() {\n        return Number.parseInt(this.#element.dataset.oldinstanceid);\n    }\n\n    /**\n     * @return {HTMLElement}\n     */\n    getItemInfo() {\n        return this.#element.querySelector('.info');\n    }\n\n    /**\n     * @param {HTMLElement} item\n     * @param {Boolean|NULL} collapse\n     */\n    toggleCollapse(item, collapse = null) {\n        if (item.dataset.type !== 'section' &&\n            item.dataset.status !== '0' &&\n            item.dataset.status !== '2') {\n            return;\n        }\n\n        if (collapse !== null) {\n            item.dataset.collapsed = collapse ? 'true' : 'false';\n        } else {\n            item.dataset.collapsed = item.dataset.collapsed === 'true' ? 'false' : 'true';\n        }\n\n        const iconElement = item.querySelector('.info > i');\n        if (!iconElement.classList.contains('fa-exclamation-triangle')) {\n            iconElement.classList.remove('fa-folder-o', 'fa-folder-open-o');\n            iconElement.classList.add(item.dataset.collapsed === 'true' ? 'fa-folder-o' : 'fa-folder-open-o');\n        }\n    }\n\n    isModule() {\n        return !this.isSection();\n    }\n\n    isSection() {\n        return this.#element.dataset.type === 'section';\n    }\n\n    /**\n     * @param {Event} e\n     */\n    toggleCollapseRecursively(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (this.isModule() || this.#element.dataset.status !== '1') {\n            return;\n        }\n\n        this.toggleCollapse(this.#element);\n        this.getItemChildrenRecursively().forEach((item) => {\n            this.toggleCollapse(item, this.#element.dataset.collapsed === 'true');\n        });\n    }\n\n    remove() {\n        this.#element.remove();\n    }\n}\n"],"names":["currentTry","retries","call","methodname","args","item_id","this","getItemId","done","async","item","status","_classPrivateFieldGet","renderItem","Promise","resolve","setTimeout","then","fail","data","exception","querySelector","addEventListener","toggleCollapseRecursively","bind","checkbox","updateSelectAllState","updateBulkDeleteButtonState","actionsContainer","confirmDeleteItem","copyItemToCourse","runNow","constructor","baseFactory","blockElement","element","dataset","e","preventDefault","stopPropagation","setClipboard","currentTarget","disabled","task_id","_currentTarget$datase2","taskId","remove","strings","key","component","modal","ModalFactory","create","type","types","DELETE_CANCEL","title","getItemName","slice","trim","body","buttons","delete","cancel","removeOnClose","getRoot","on","ModalEvents","deleteItem","show","getItemChildrenRecursively","querySelectorAll","getItemElement","getStatus","innerText","Number","parseInt","itemid","getItemOldInstanceId","oldinstanceid","getItemInfo","toggleCollapse","collapse","collapsed","iconElement","classList","contains","add","isModule","isSection","forEach"],"mappings":"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"}